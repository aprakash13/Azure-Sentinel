id: 79566f41-df67-4e10-a703-c38a6213afd8
name: New access credential added to an OAuth application
description: |
  'This will alert when an account with Application Administrator privileges adds a new client credential to an OAuth application. Following this event, the application can authenticate using the Client Credentials Grant flow.
  If a threat actor obtains access to an Application Administrator account, they may configure this alternate authentication mechanism for direct access to any of the scopes and services available to the Service Principal.
  For further information on Client Credentials Grant see RFC 6749 Section 4.4 or https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-oauth2-client-creds-grant-flow
  For further information on AuditLogs please see https://docs.microsoft.com/azure/active-directory/reports-monitoring/reference-audit-activities.'
severity: Medium
requiredDataConnectors:
  - connectorId: AzureActiveDirectory
    dataTypes:
      - AuditLogs
queryFrequency: 1h
queryPeriod: 1h
triggerOperator: gt
triggerThreshold: 0
tactics:
  - CredentialAccess
relevantTechniques:
  - T1550.001
query: |
  let auditLookback = 1h;
  AuditLogs
  | where TimeGenerated > ago(auditLookback)
  | where OperationName has_any ("Add service principal", "Certificates and secrets management") // captures "Add service principal", "Add service principal credentials", and "Update application â€“ Certificates and secrets management" events
  | extend targetDisplayName = TargetResources[0].displayName
  | extend targetId = TargetResources[0].id
  | extend targetType = TargetResources[0].type
  | extend keyEvents = TargetResources[0].modifiedProperties
  | where keyEvents has "KeyIdentifier=" and keyEvents has "KeyUsage=Verify"
  | where Result =~ "success"
  | mv-expand keyEvents
  | where keyEvents.displayName =~ "KeyDescription"
  | parse keyEvents.newValue with * "KeyIdentifier=" keyIdentifier:string ",KeyType=" keyType:string ",KeyUsage=" keyUsage:string ",DisplayName=" keyDisplayName:string "]" *
  | parse keyEvents.oldValue with * "KeyIdentifier=" keyIdentifierOld:string "," *
  | where keyEvents.oldValue == "[]" or keyIdentifier != keyIdentifierOld
  | where keyUsage == "Verify"
  | extend UserAgent = iff(AdditionalDetails[0].key == "User-Agent",AdditionalDetails[0].value,"")
  | extend InitiatingUser = iff(isnotempty(InitiatedBy.user.userPrincipalName),InitiatedBy.user.userPrincipalName, InitiatedBy.app.displayName)
  | extend InitiatingIpAddress = iff(isnotempty(InitiatedBy.user.ipAddress), InitiatedBy.user.ipAddress, InitiatedBy.app.ipAddress)
  // 
  // Adding the below filter for detection-quality events; Sentinel users can comment out this line and tune additional service principal events for their environment
  | where targetType =~ "Application"

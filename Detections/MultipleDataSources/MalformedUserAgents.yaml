id: a357535e-f722-4afe-b375-cff362b2b376
name: Malformed user agent
description: |
  'Malware authors will sometimes hardcode user agent string values when writing the network communication component of their malware.
  Malformed user agents can be an indication of such malware.'
severity: Medium
requiredDataConnectors:
  - connectorId: WAF
    dataTypes:
      - AzureDiagnostics
  - connectorId: Office365
    dataTypes:
      - OfficeActivity
  - connectorId: AzureActiveDirectory
    dataTypes:
      - SigninLogs
queryFrequency: 1d
queryPeriod: 1d
triggerOperator: gt
triggerThreshold: 0
tactics:
  - InitialAccess
  - CommandAndControl
  - Execution
relevantTechniques:
  - T1189
  - T1071
  - T1203
query: |

  let endtime = 1d;
  (union isfuzzy=true
  (OfficeActivity | where TimeGenerated >= ago(endtime) | where UserAgent != ""),
  (OfficeActivity
  | where TimeGenerated >= ago(endtime)
  | where RecordType in ("AzureActiveDirectory", "AzureActiveDirectoryStsLogon")
  | extend OperationName = Operation
  | parse ExtendedProperties with * 'User-Agent\\":\\"' UserAgent2 '\\' *
  | parse ExtendedProperties with * 'UserAgent",      "Value": "' UserAgent1 '"' *
  | where isnotempty(UserAgent1) or isnotempty(UserAgent2)
  | extend UserAgent = iff( RecordType == 'AzureActiveDirectoryStsLogon', UserAgent1, UserAgent2)
  | project TimeGenerated, AADTarget, Actor, ActorContextId, ClientIP, UserAgent, ExtendedProperties, OfficeId, OperationName = Operation, UserPrincipalName = UserId, ResultStatus
  ),
  (AzureDiagnostics
  | where TimeGenerated >= ago(endtime)
  | where ResourceType =~ "APPLICATIONGATEWAYS" 
  | where OperationName =~ "ApplicationGatewayAccess" 
  | extend ClientIP = columnifexists("clientIP_s", "None"), UserAgent = columnifexists("userAgent_s", "None")
  | where UserAgent != '-'
  | project TimeGenerated, ClientIP, clientPort_d, UserAgent, _ResourceId, requestUri_s, httpMethod_s, host_s, requestQuery_s, httpStatus_d, receivedBytes_d, sentBytes_d, originalHost_s
  ),
  (SigninLogs
  | where TimeGenerated >= ago(endtime)
  | where isnotempty(UserAgent)
  | project TimeGenerated, ClientIP = IPAddress, UserAgent, OperationName, AppDisplayName, ClientAppUsed, DeviceDetail, LocationDetails, UserPrincipalName, ResultStatus = Status, UserDisplayName, OriginalRequestId
  ),
  (AADNonInteractiveUserSignInLogs 
  | where TimeGenerated >= ago(endtime)
  | where isnotempty(UserAgent)
  | project TimeGenerated,  ClientIP = IPAddress, UserAgent, OperationName, AppDisplayName, ClientAppUsed, DeviceDetail, LocationDetails, UserPrincipalName, ResultStatus = Status, UserDisplayName, OriginalRequestId, AuthenticationRequirement
  )
  )
  // Likely artefact of hardcoding
  | where UserAgent startswith "User" or UserAgent startswith "\""
  // Incorrect casing
  or (UserAgent startswith "Mozilla" and not(UserAgent containscs "Mozilla"))
  // Incorrect casing
  or UserAgent containscs  "(Compatible;"
  // Missing MSIE version
  or UserAgent matches regex @"MSIE\s?;"
  // Incorrect spacing around MSIE version
  or UserAgent matches regex  @"MSIE(?:\d|.{1,5}?\d\s;)"
  | summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated), OperationNames = makeset(OperationName), UserAgentCount = dcount(UserAgent), 
  UserAgentList = makeset(UserAgent), RecordTypes = makeset(RecordType) by UserId, ClientIP
  | extend timestamp = StartTimeUtc, IPCustomEntity = ClientIP, AccountCustomEntity = UserId

entityMappings:
  - entityType: Account
    fieldMappings:
      - identifier: FullName
        columnName: AccountCustomEntity
  - entityType: IP
    fieldMappings:
      - identifier: Address
        columnName: IPCustomEntity

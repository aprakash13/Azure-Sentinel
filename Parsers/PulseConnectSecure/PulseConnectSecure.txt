// Title:           Pulse Connect Secure Data Parser
// Author:          Microsoft
// Version:         1.1
// Last Updated:    06/16/2020
// Comment:         Added support for version 8.0R7 and above
//  
// DESCRIPTION:
// This parser takes raw Pulse Connect Secure logs from a Syslog data stream and parses the data into a normalized schema
//
// USAGE:
// 1. Open Log Analytics/Azure Sentinel Logs blade. Copy the query below and paste into the Logs query window. 
// 2. In the query window, on the second line of the query, enter the hostname(s) of your Pulse Connect Secure device(s) and any other unique identifiers for the logstream. 
//    For example: | where Computer in ("server1, server2") and Facility == "local7"
// 3. Click the Save button above the query. A pane will appear on the right, select "as Function" from the drop down. Enter a Function Name.
//    In order for the Pulse Connect Secure logs to work with pre-built queries and workbooks the Function Alias must be set to - PulseConnectSecure
// 4. Function App usually take 10-15 minutes to activate. You can then use Function Alias for other queries
//
//
// REFERENCE: 
// Using functions in Azure monitor log queries: https://docs.microsoft.com/azure/azure-monitor/log-query/functions
// Pulse Connect Secure Event Log Format: https://docs.pulsesecure.net/WebHelp/Content/PCS/PCS_AdminGuide_8.2/Displaying%20Events%20Logs.htm
//
// LOG SAMPLES:
// This parser assumes the raw log are formatted as follows:
// 
//      2020-05-01 05:36:14 - ive - [10.0.0.0] user100(ABC Realm)[Personal_PC No RDP] - WebRequest ok : Host: sample.abc.com, Request: GET /Citrix/XDSWeb/dample/js/ctxs.webui.min_0204820BD028.js HTTP/1.1
//      2020-05-01 00:07:21 - ive - [127.0.0.1] System()[] - User Accounts modified. Removed username ABC\user34 from authentication server ABC Active Directory.
//
//
Syslog
| where Computer in ("datasource") and Facility == "local7"
// Version 8.0R7 and below using the Standard format
| extend Parser = extract_all(@'^(\d{4}\-\d{2}-\d{2})\s(\d{2}\:\d{2}:\d{2})\s(\S+)\s(\S+)\s(\S+)\s\[(\S+)\]\s(\S+)\((.*)?\)\[(.*)\]\s\-\s(.*)',dynamic([1,2,3,4,5,6,7,8,9,10]),SyslogMessage)
| mv-expand Parser
| extend LogTime = todatetime(strcat(tostring(Parser[0]),'T',tostring(Parser[1]))), 
    Node = tostring(Parser[3]), 
    Source_IP = tostring(Parser[5]), 
    User = tostring(Parser[6]), 
    Realm = tostring(Parser[7]), 
    EventID = tostring(Parser[8]), 
    Messages = tostring(Parser[9])
| project-away Parser
// The section below is for parsing WebTrends Enhanced Log Format (WELF) logs.  If you are NOT using WELF, then keep this section commented out otherwise uncomment each line to use
// Version 8.0R7 and above using the WELF format
//| extend User = extract(@'user=(\S+)',1,SyslogMessage),
//    EventID = extract(@'id=(\S+)',1,SyslogMessage),
//    Pri = extract(@'pri=(\S+)',1,SyslogMessage),
//    Node = extract(@'vpn=\"(\S+)\"',1,SyslogMessage),
//    Realm = extract(@'realm=\"([\w\s\:\.]+)\"',1,SyslogMessage),
//    Roles = extract(@'roles=\"([\w\s\:\.]+)\"',1,SyslogMessage),
//    Type = extract(@'type=(\S+)',1,SyslogMessage),
//    Messages = extract(@'msg=\"([\w\s\:\.]+)\"',1,SyslogMessage),
//    Source_IP = extract(@'fw=([\d\.]+)',1,SyslogMessage)


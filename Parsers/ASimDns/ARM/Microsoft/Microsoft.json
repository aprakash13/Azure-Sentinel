{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
      "workspaceName": {
          "type": "string"
      },
      "location": {
        "type": "string"
      }
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2017-03-15-preview",
      "name": "[parameters('workspaceName')]",
      "location": "[parameters('location')]",
      "resources": [
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "vimdnsmicrosoftoms",
            "dependsOn": [
              "[concat('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
            ],
            "properties": {
              "etag": "*",
              "displayName": "Vendor Information Model Dns - Microsoft",
              "category": "Security",
              "FunctionAlias": "vimDnsMicrosoftOMS",
              "query": "let RCodeTable=datatable(ResponseCode:int,ResponseCodeName:string)[  0, 'NoError' , 1, 'FormErr' , 2,'ServFail' , 3,'NXDomain' , 4,'NotImp' , 5,'Refused' , 6,'YXDomain' , 7,'YXRRSet' ,8,'NXRRSet' , 9,'NotAuth' , 10,'NotZone' , 11,'DSOTYPENI' , 16,'BADVERS' , 16,'BADSIG' , 17,'BADKEY' , 18,'BADTIME' , 19,'BADMODE' , 20,'BADNAME' , 21,'BADALG' , 22,'BADTRUNC' , 23,'BADCOOKIE'];\n let DNSQuery_MS=(){\n DnsEvents | where EventId in (257,258)\n | project-rename\n Dvc=Computer ,\n SrcIpAddr = ClientIP,\n QueryTypeName=QueryType,\n EventMessage =Message,\n EventReportUrl = ReportReferenceLink,\n ResponseName = IPAddresses,\n Query = Name,\n ResponseCode = ResultCode\n | extend\n EventCount=int(1),\n EventStartTime=TimeGenerated,\nEventVendor = 'Microsoft',\n EventProduct = 'Microsoft DNS Server',\n EventSchemaVersion='0.0.1',\n EventEndTime=TimeGenerated,\n EventSubType='response',\nEventSeverity = tostring(Severity),\n EventType = 'lookup',\n DvcHostname = Dvc,\n EventResult = iff(EventId==257 and ResponseCode==0 ,'Success','Failure')\n | lookup RCodeTable on ResponseCode\n | extend EventResultDetails = case (isnotempty(ResponseCodeName), ResponseCodeName\n , ResponseCode between (3841 .. 4095), 'Reserved for Private Use'\n ,'Unassigned')\n | extend\n ResponseCodeName=EventResultDetails,\n Domain=Query,\n IpAddr=SrcIpAddr\n };\n DNSQuery_MS",
              "version": 1
          }
        }
      ]
    }
  ]
}

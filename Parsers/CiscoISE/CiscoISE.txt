// Usage Instruction : 
// Paste below query in log analytics, click on Save button and select as Function from drop down by specifying function name and alias as CiscoISEEvent.
// Function usually takes 10-15 minutes to activate. You can then use function alias from any other queries (e.g. CiscoISEEvent | take 10).
// Reference : Using functions in Azure monitor log queries : https://docs.microsoft.com/azure/azure-monitor/log-query/functions
let EventData = Syslog
| where ProcessName contains "CSCO" or ProcessName contains "CISE"
| where SyslogMessage matches regex (@'.*\d{10}\s(\d{4,5})\s.*')
| extend EventVendor = 'CISCO'
| extend EventProduct = 'ISE'
| extend EventId = extract(@'.*\d{10}\s(\d{4,5})\s.*', 1, SyslogMessage)
| extend EventSeverity = extract(@'.*(NOTICE|INFO|WARN|WARNING|ERROR|FATAL|DEBUG).*', 1, SyslogMessage)
| extend EventCategory = extract(@'\d{10}\s\d{4,5}\s\w+\s(.*?):\s.*?,', 1, SyslogMessage)
| extend EventMessage = extract(@'\d{10}\s\d{4,5}\s\w+\s.*?:\s(.*?),', 1, SyslogMessage)
| extend ConfigVersionId = extract(@'ConfigVersionId=(.*?),', 1, SyslogMessage)
| extend DvcIpAddr = extract(@'Device IP Address=(.*?),', 1, SyslogMessage)
| extend DvcHostname = extract(@'NetworkDeviceName=(.*?),', 1, SyslogMessage)
| extend DstIpAddr = extract(@'DestinationIPAddress=(.*?),', 1, SyslogMessage)
| extend DstPortNumber = extract(@'DestinationPort=(.*?),', 1, SyslogMessage)
| extend DstUserName = extract(@'UserName=(.*?),', 1, SyslogMessage)
| extend NetworkProtocol = extract(@'Protocol=(.*?),', 1, SyslogMessage)
| extend RequestLatency = extract(@'RequestLatency=(.*?),', 1, SyslogMessage)
| extend NasIpAddress = extract(@'NAS-IP-Address=(.*?),', 1, SyslogMessage)
| extend NasPort = extract(@'NAS-Port=(.*?),', 1, SyslogMessage)
| extend NasPortType = extract(@'NAS-Port-Type=(.*?),', 1, SyslogMessage)
| extend NasIdentifier = extract(@'NAS-Identifier=(.*?),', 1, SyslogMessage)
| extend ServiceType = extract(@'Service-Type=(.*?),', 1, SyslogMessage)
| extend FramedMtu = extract(@'Framed-MTU=(.*?),', 1, SyslogMessage)
| extend CalledStationId = extract(@'Called-Station-ID=(.*?),', 1, SyslogMessage)
| extend CallingStationId = extract(@'Calling-Station-ID=(.*?),', 1, SyslogMessage)
| extend EventType = extract(@'Type=(.*?),', 1, SyslogMessage)
| extend DvcAction = extract(@'Action=(.*?),', 1, SyslogMessage)
| extend PrivilegeLevel = extract(@'Privilege-Level=(.*?),', 1, SyslogMessage)
| extend SrcIpAddr = extract(@'Remote-Address=(.*?),', 1, SyslogMessage)
| extend NetworkDeviceProfileId = extract(@'NetworkDeviceProfileId=(.*?),', 1, SyslogMessage)
| extend AcsSessionId = extract(@'AcsSessionID=(.*?),', 1, SyslogMessage)
| extend AcctSessionId = extract(@'Acct-Session-Id=(.*?),', 1, SyslogMessage)
| extend AuthenType = extract(@'Authen-Type=(.*?),', 1, SyslogMessage)
| extend AuthenticationIdentityStore = extract(@'AuthenticationIdentityStore=(.*?),', 1, SyslogMessage)
| extend AuthenticationMethod = extract(@'AuthenticationMethod=(.*?),', 1, SyslogMessage)
| extend SelectedAccessService = extract(@'SelectedAccessService=(.*?),', 1, SyslogMessage)
| extend SelectedShellProfile = extract(@'SelectedShellProfile=(.*?),', 1, SyslogMessage)
| extend IdentityGroup = extract(@'IdentityGroup=(.*?),', 1, SyslogMessage)
| extend Service = extract(@'Service=(.*?),', 1, SyslogMessage)
| extend ServiceArgument = extract(@'Service-Argument=(.*?),', 1, SyslogMessage)
| extend CmdSet = extract(@'CmdSet=(.*?),', 1, SyslogMessage)
| extend MatchedCommandSet = extract(@'MatchedCommandSet=(.*?),', 1, SyslogMessage)
| extend AuthenMethod = extract(@'Authen-Method=(.*?),', 1, SyslogMessage)
| extend SelectedCommandSet = extract(@'SelectedCommandSet=(.*?),', 1, SyslogMessage)
| extend NetworkDeviceProfileName = extract(@'NetworkDeviceProfileName=(.*?),', 1, SyslogMessage)
| extend PostureStatus = extract(@'PostureStatus=(.*?),', 1, SyslogMessage)
| extend SelectedAuthorizationProfiles = extract(@'SelectedAuthorizationProfiles=(.*?),', 1, SyslogMessage)
| extend AuthorizationPolicyMatchedRule = extract(@'AuthorizationPolicyMatchedRule=(.*).', 1, SyslogMessage)
| extend DvcMacAddr = extract(@'device-mac=(.*?),', 1, SyslogMessage)
| extend DevicePublicMac = extract(@'device-public-mac=(.*?),', 1, SyslogMessage)
| extend DevicePlatform = extract(@'device-platform=(.*?),', 1, SyslogMessage)
| extend DevicePlatformVersion = extract(@'device-platform-version=(.*?)\s', 1, SyslogMessage)
| extend DeviceType = extract(@'device-type=(.*?),', 1, SyslogMessage)
| extend HttpUserAgentOriginal = extract(@'ac-user-agent=(.*).', 1, SyslogMessage)
| extend MisconfiguredClientFixReason = extract(@'MisconfiguredClientFixReason=(.*?),', 1, SyslogMessage)
| extend RadiusPacketType = extract(@'RadiusPacketType=(.*?),', 1, SyslogMessage)
| extend EventTypeDetailed = extract(@'FailureReason=(.*?),', 1, SyslogMessage)
| extend EventResultDetails = extract(@'DetailedInfo=(.*?).', 1, SyslogMessage)
;
let EventName=datatable(EventId:string, EventDescription:string)["5200","User authentication ended successfully","5201", "User authentication ended successfully","5202","The requested Command Authorization passed","5203","The requested Session Authorization passed","5205","Dynamic Authorization succeeded","5231","Guest Authentication Passed","5236","Authorize-Only ended successfully","5238","","5240","Previously rejected endpoint was released to continue authentications","5400","User authentication failed. See FailureReason for more information","5401","User authentication failed. See FailureReason for more information","5405","RADIUS request dropped","5406","","5407","TACACS+ Authorization failed","5411","Supplicant did not respond to the last message that ISE sent to it","5417","Dynamic Authorization failed","5434","Endpoint conducted several failed authentications of the same scenario","5436","Ignoring this request because it is a duplicate of another packet that is currently being processed","5440","Endpoint started new authentication while previous is still in progress. Most probable that supplicant on that endpoint stopped conducting the previous authentication and started the new one. Closing the previous authentication","5449","Endpoint failed authentication of the same scenario several times and all further requests will be rejected for the duration of the Request Rejection Interval","12508","EAP-TLS handshake failed","12514","EAP-TLS failed SSL/TLS handshake because of an unknown CA in the client certificates chain","12516","EAP-TLS failed SSL/TLS handshake because of an expired certificate in the client certificates chain","60114","ISE server shutdown has been initiated","60166","Certificate Expiration warning","60167","Certificate has expired","80002","This message is generated when a profiler endpoint is profiled","86009","Guest user record is not found in the database","86010","Guest user authentication failed. Please check your password and account permission","86011","Guest user authentication failed. User is not enabled. Please contact your System Administrator","86012","Guest User must accept Access-Use policy before network access is granted","86013","Portal is not found in the database. Please contact your System Administrator","86014","User authentication failed. User account is suspended","86015","Invalid password change. Use correct password based on the password policy","86016","Timeout from server has exceeded the threshold. Please contact your System Administrator","86017","SessionID is missing. Please contact your System Administrator","86018","Guest Change of Authorization has failed. Please contact your System Administrator","86019","User access is restricted based on time profile. Please contact your System Administrator","86020","User authentication failed. Please contact your System Administrator"];
EventData
| lookup EventName on EventId
| project TimeGenerated
        , EventVendor
        , EventProduct
        , EventId
        , EventSeverity
        , EventCategory
        , EventMessage
        , EventDescription
        , ConfigVersionId
        , DvcIpAddr
        , DvcHostname
        , DstIpAddr
        , DstPortNumber
        , DstUserName
        , NetworkProtocol
        , RequestLatency
        , NasIpAddress
        , NasPort
        , NasPortType
        , NasIdentifier
        , ServiceType
        , FramedMtu
        , CalledStationId
        , CallingStationId
        , EventType
        , DvcAction
        , PrivilegeLevel
        , SrcIpAddr
        , NetworkDeviceProfileId
        , AcsSessionId
        , AuthenType
        , AuthenticationIdentityStore
        , AuthenticationMethod
        , SelectedAccessService
        , SelectedShellProfile
        , IdentityGroup
        , Service
        , ServiceArgument
        , CmdSet
        , MatchedCommandSet
        , AuthenMethod
        , SelectedCommandSet
        , NetworkDeviceProfileName
        , PostureStatus
        , SelectedAuthorizationProfiles
        , AuthorizationPolicyMatchedRule
        , DvcMacAddr
        , DevicePublicMac
        , DevicePlatform
        , DevicePlatformVersion
        , DeviceType
        , HttpUserAgentOriginal
        , MisconfiguredClientFixReason
        , RadiusPacketType
        , EventTypeDetailed
        , EventResultDetails
// Usage Instruction : 
// Paste below query in log analytics, click on Save button and select as Function from drop down by specifying function name and alias as CrowdstrikeReplicator.
// Function usually takes 10-15 minutes to activate. You can then use function alias from any other queries (e.g. CrowdstrikeReplicator | take 10).
// Reference : Using functions in Azure monitor log queries : https://docs.microsoft.com/azure/azure-monitor/log-query/functions
let CrowdstrikeReplicatorLogs_view  = view () { 
    CrowdstrikeReplicatorLogs_CL
    | extend 
                EventVendor="Crowdstrike",
                EventProduct="Replicator",
                FileMode=column_ifexists('FileMode_s', ''),
                DeviceSerialNumber=column_ifexists('DeviceSerialNumber_s', ''),
                IcmpCode=column_ifexists('IcmpCode_s', ''),
                IcmpType=column_ifexists('IcmpType_s', ''),
                LastUpdateInstalledTime=column_ifexists('LastUpdateInstalledTime_s', ''),
                RebootRequired=column_ifexists('RebootRequired_s', ''),
                PendingUpdateIds=column_ifexists('PendingUpdateIds_s', ''),
                InstalledUpdateIds=column_ifexists('InstalledUpdateIds_s', ''),
                InstalledUpdateExtendedStatus=column_ifexists('InstalledUpdateExtendedStatus_s', ''),
                SupersededUpdateIds=column_ifexists('SupersededUpdateIds_s', ''),
                ConfigurationDescriptorValue=column_ifexists('ConfigurationDescriptorValue_s', ''),
                ConfigurationDescriptorAttributes=column_ifexists('ConfigurationDescriptorAttributes_s', ''),
                DeviceDescriptorUniqueIdentifier=column_ifexists('DeviceDescriptorUniqueIdentifier_s', ''),
                ConfigurationDescriptorName=column_ifexists('ConfigurationDescriptorName_s', ''),
                ConfigurationDescriptorNumInterfaces=column_ifexists('ConfigurationDescriptorNumInterfaces_s', ''),
                ConfigurationDescriptorMaxPowerDraw=column_ifexists('ConfigurationDescriptorMaxPowerDraw_s', ''),
                ScreenshotsTakenCount=column_ifexists('ScreenshotsTakenCount_s', ''),
                ExitCode=column_ifexists('ExitCode_s', ''),
                ParentProcessId=column_ifexists('ParentProcessId_s', ''),
                DstUserIdentity=column_ifexists('UserSid_s', ''),
                NetworkListenCount=column_ifexists('NetworkListenCount_s', ''),
                SuspiciousRawDiskReadCount=column_ifexists('SuspiciousRawDiskReadCount_s', ''),
                NetworkBindCount=column_ifexists('NetworkBindCount_s', ''),
                NetworkRecvAcceptCount=column_ifexists('NetworkRecvAcceptCount_s', ''),
                ContextData=column_ifexists('ContextData_s', ''),
                Id=column_ifexists('id_g', ''),
                NewExecutableWrittenCount=column_ifexists('NewExecutableWrittenCount_s', ''),
                ExeAndServiceCount=column_ifexists('ExeAndServiceCount_s', ''),
                NetworkCloseCount=column_ifexists('NetworkCloseCount_s', ''),
                SuspectStackCount=column_ifexists('SuspectStackCount_s', ''),
                CLICreationCount=column_ifexists('CLICreationCount_s', ''),
                UnsignedModuleLoadCount=column_ifexists('UnsignedModuleLoadCount_s', ''),
                UserTime=column_ifexists('UserTime_s', ''),
                EventMessage=column_ifexists('event_simpleName_s', ''),
                RawProcessId=column_ifexists('RawProcessId_s', ''),
                ContextTimeStamp=column_ifexists('ContextTimeStamp_s', ''),
                AllocateVirtualMemoryCount=column_ifexists('AllocateVirtualMemoryCount_s', ''),
                ContextProcessId=column_ifexists('ContextProcessId_s', ''),
                ServiceEventCount=column_ifexists('ServiceEventCount_s', ''),
                SnapshotFileOpenCount=column_ifexists('SnapshotFileOpenCount_s', ''),
                RemovableDiskFileWrittenCount=column_ifexists('RemovableDiskFileWrittenCount_s', ''),
                InjectedDllCount=column_ifexists('InjectedDllCount_s', ''),
                ModuleLoadCount=column_ifexists('ModuleLoadCount_s', ''),
                UserMemoryProtectExecutableCount=column_ifexists('UserMemoryProtectExecutableCount_s', ''),
                NetworkCapableAsepWriteCount=column_ifexists('NetworkCapableAsepWriteCount_s', ''),
                TargetProcessId=column_ifexists('TargetProcessId_s', ''),
                DnsRequestCount=column_ifexists('DnsRequestCount_s', ''),
                ArchiveFileWrittenCount=column_ifexists('ArchiveFileWrittenCount_s', ''),
                Entitlements=column_ifexists('Entitlements_s', ''),
                Name=column_ifexists('name_s', ''),
                ProcessStartTime=column_ifexists('ProcessStartTime_s', ''),
                SetThreadContextCount=column_ifexists('SetThreadContextCount_s', ''),
                SuspiciousCredentialModuleLoadCount=column_ifexists('SuspiciousCredentialModuleLoadCount_s', ''),
                DvcInterfaceGuid=column_ifexists('aid_g', ''),
                Cid=column_ifexists('cid_g', ''),
                FileDeletedCount=column_ifexists('FileDeletedCount_s', ''),
                UserMemoryAllocateExecutableCount=column_ifexists('UserMemoryAllocateExecutableCount_s', ''),
                DirectoryCreatedCount=column_ifexists('DirectoryCreatedCount_s', ''),
                NetworkConnectCountUdp=column_ifexists('NetworkConnectCountUdp_s', ''),
                QueueApcCount=column_ifexists('QueueApcCount_s', ''),
                ContextThreadId=column_ifexists('ContextThreadId_s', ''),
                Aip=column_ifexists('aip_s', ''),
                SuspiciousFontLoadCount=column_ifexists('SuspiciousFontLoadCount_s', ''),
                ConHostId=column_ifexists('ConHostId_s', ''),
                NetworkConnectCount=column_ifexists('NetworkConnectCount_s', ''),
                BinaryExecutableWrittenCount=column_ifexists('BinaryExecutableWrittenCount_s', ''),
                CycleTime=column_ifexists('CycleTime_s', ''),
                DvcOs=column_ifexists('event_platform_s', ''),
                ConHostProcessId=column_ifexists('ConHostProcessId_s', ''),
                PrivilegedProcessHandleCount=column_ifexists('PrivilegedProcessHandleCount_s', ''),
                MaxThreadCount=column_ifexists('MaxThreadCount_s', ''),
                ImageSubsystem=column_ifexists('ImageSubsystem_s', ''),
                GenericFileWrittenCount=column_ifexists('GenericFileWrittenCount_s', ''),
                EffectiveTransmissionClass=column_ifexists('EffectiveTransmissionClass_s', ''),
                ScriptEngineInvocationCount=column_ifexists('ScriptEngineInvocationCount_s', ''),
                RunDllInvocationCount=column_ifexists('RunDllInvocationCount_s', ''),
                timestamp=column_ifexists('timestamp_s', ''),
                CreateProcessCount=column_ifexists('CreateProcessCount_s', ''),
                KernelTime=column_ifexists('KernelTime_s', ''),
                DirectoryEnumeratedCount=column_ifexists('DirectoryEnumeratedCount_s', ''),
                ConfigStateHash=column_ifexists('ConfigStateHash_s', ''),
                AsepWrittenCount=column_ifexists('AsepWrittenCount_s', ''),
                SuspiciousDnsRequestCount=column_ifexists('SuspiciousDnsRequestCount_s', ''),
                DocumentFileWrittenCount=column_ifexists('DocumentFileWrittenCount_s', ''),
                ProtectVirtualMemoryCount=column_ifexists('ProtectVirtualMemoryCount_s', ''),
                ProcessHashSha256=column_ifexists('SHA256HashData_s', ''),
                UserMemoryProtectExecutableRemoteCount=column_ifexists('UserMemoryProtectExecutableRemoteCount_s', ''),
                ConfigBuild=column_ifexists('ConfigBuild_s', ''),
                UserMemoryAllocateExecutableRemoteCount=column_ifexists('UserMemoryAllocateExecutableRemoteCount_s', ''),
                ExecutableDeletedCount=column_ifexists('ExecutableDeletedCount_s', ''),
                RegKeySecurityDecreasedCount=column_ifexists('RegKeySecurityDecreasedCount_s', ''),
                InjectedThreadCount=column_ifexists('InjectedThreadCount_s', ''),
                NetworkModuleLoadCount=column_ifexists('NetworkModuleLoadCount_s', ''),
                WindowTitle=column_ifexists('WindowTitle_s', ''),
                ProcessCreateFlags=column_ifexists('ProcessCreateFlags_s', ''),
                IntegrityLevel=column_ifexists('IntegrityLevel_s', ''),
                SourceProcessId=column_ifexists('SourceProcessId_s', ''),
                ProcessHashSha1=column_ifexists('SHA1HashData_s', ''),
                TokenType=column_ifexists('TokenType_s', ''),
                ProcessEndTime=column_ifexists('ProcessEndTime_s', ''),
                AuthenticodeHashData=column_ifexists('AuthenticodeHashData_s', ''),
                ParentBaseFileName=column_ifexists('ParentBaseFileName_s', ''),
                SessionId=column_ifexists('SessionId_s', ''),
                Tags=column_ifexists('Tags_s', ''),
                ProcessHashMd5=column_ifexists('MD5HashData_g', ''),
                ProcessSxsFlags=column_ifexists('ProcessSxsFlags_s', ''),
                AuthenticationId=column_ifexists('AuthenticationId_s', ''),
                WindowFlags=column_ifexists('WindowFlags_s', ''),
                ProcessCommandLine=column_ifexists('CommandLine_s', ''),
                ParentAuthenticationId=column_ifexists('ParentAuthenticationId_s', ''),
                FileName=column_ifexists('ImageFileName_s', ''),
                SourceThreadId=column_ifexists('SourceThreadId_s', ''),
                ProcessParameterFlags=column_ifexists('ProcessParameterFlags_s', ''),
                SignInfoFlags=column_ifexists('SignInfoFlags_s', ''),
                ChannelVersion=column_ifexists('ChannelVersion_s', ''),
                ChannelVersionRequired=column_ifexists('ChannelVersionRequired_s', ''),
                ChannelId=column_ifexists('ChannelId_s', ''),
                DnsResponseType=column_ifexists('DnsResponseType_s', ''),
                IP4Records=column_ifexists('IP4Records_s', ''),
                CNAMERecords=column_ifexists('CNAMERecords_s', ''),
                QueryStatus=column_ifexists('QueryStatus_s', ''),
                InterfaceIndex=column_ifexists('InterfaceIndex_s', ''),
                DualRequest=column_ifexists('DualRequest_s', ''),
                FirstIP4Record=column_ifexists('FirstIP4Record_s', ''),
                UrlDomain=column_ifexists('DomainName_s', ''),
                RespondingDnsServer=column_ifexists('RespondingDnsServer_s', ''),
                RequestType=column_ifexists('RequestType_s', ''),
                FirewallRuleId=column_ifexists('FirewallRuleId_s', ''),
                Options=column_ifexists('Options_s', ''),
                MinorFunction=column_ifexists('MinorFunction_s', ''),
                FileIdentifier=column_ifexists('FileIdentifier_s', ''),
                Information=column_ifexists('Information_s', ''),
                ShareAccess=column_ifexists('ShareAccess_s', ''),
                FileObject=column_ifexists('FileObject_s', ''),
                FilePermission=column_ifexists('FileAttributes_s', ''),
                Status=column_ifexists('Status_s', ''),
                IrpFlags=column_ifexists('IrpFlags_s', ''),
                MajorFunction=column_ifexists('MajorFunction_s', ''),
                DesiredAccess=column_ifexists('DesiredAccess_s', ''),
                OperationFlags=column_ifexists('OperationFlags_s', ''),
                TargetFileName=column_ifexists('TargetFileName_s', ''),
                CallStackModuleNamesVersion=column_ifexists('CallStackModuleNamesVersion_s', ''),
                CsaProcessDataCollectionInstanceId=column_ifexists('CsaProcessDataCollectionInstanceId_s', ''),
                CallStackModuleNames=column_ifexists('CallStackModuleNames_s', ''),
                CreateProcessType=column_ifexists('CreateProcessType_s', ''),
                EtwRawProcessId=column_ifexists('EtwRawProcessId_s', ''),
                EventMax=column_ifexists('EventMax_s', ''),
                EtwRawThreadId=column_ifexists('EtwRawThreadId_s', ''),
                Flags=column_ifexists('Flags_s', ''),
                EventMin=column_ifexists('EventMin_s', ''),
                RawThreadId=column_ifexists('RawThreadId_s', ''),
                SrcIpAddr=column_ifexists('LocalAddressIP4_s', ''),
                ConnectionFlags=column_ifexists('ConnectionFlags_s', ''),
                DstIpPort=column_ifexists('RemotePort_s', ''),
                SrcIpPort=column_ifexists('LocalPort_s', ''),
                Protocol=column_ifexists('Protocol_s', ''),
                DstIpAddr=column_ifexists('RemoteAddressIP4_s', ''),
                ConnectionDirection=column_ifexists('ConnectionDirection_s', ''),
                InContext=column_ifexists('InContext_s', ''),
                NetworkContainmentState=column_ifexists('NetworkContainmentState_s', ''),
                ConfigIDBase=column_ifexists('ConfigIDBase_s', ''),
                SensorStateBitMap=column_ifexists('SensorStateBitMap_s', ''),
                ConfigurationVersion=column_ifexists('ConfigurationVersion_s', ''),
                ConfigIDPlatform=column_ifexists('ConfigIDPlatform_s', ''),
                ConfigIDBuild=column_ifexists('ConfigIDBuild_s', ''),
                ProvisionState=column_ifexists('ProvisionState_s', ''),
                Size=column_ifexists('Size_s', ''),
                IsOnNetwork=column_ifexists('IsOnNetwork_s', ''),
                DiskParentDeviceInstanceId=column_ifexists('DiskParentDeviceInstanceId_s', ''),
                TemporaryFileName=column_ifexists('TemporaryFileName_s', ''),
                FileEcpBitmask=column_ifexists('FileEcpBitmask_s', ''),
                IsOnRemovableDisk=column_ifexists('IsOnRemovableDisk_s', ''),
                ModuleCharacteristics=column_ifexists('ModuleCharacteristics_s', ''),
                OriginalEventTimeStamp=column_ifexists('OriginalEventTimeStamp_s', ''),
                MappedFromUserMode=column_ifexists('MappedFromUserMode_s', ''),
                TreeId=column_ifexists('TreeId_s', ''),
                PrimaryModule=column_ifexists('PrimaryModule_s', ''),
                UserIsAdmin=column_ifexists('UserIsAdmin_s', ''),
                LogoffTime=column_ifexists('LogoffTime_s', ''),
                LogonTime=column_ifexists('LogonTime_s', ''),
                LogonDomain=column_ifexists('LogonDomain_s', ''),
                RemoteAccount=column_ifexists('RemoteAccount_s', ''),
                UserFlags=column_ifexists('UserFlags_s', ''),
                LogonServer=column_ifexists('LogonServer_s', ''),
                DstUserName=column_ifexists('UserName_s', ''),
                LogonType=column_ifexists('LogonType_s', ''),
                AuthenticationPackage=column_ifexists('AuthenticationPackage_s', ''),
                UserPrincipal=column_ifexists('UserPrincipal_s', ''),
                PasswordLastSet=column_ifexists('PasswordLastSet_s', ''),
                UserLogoffType=column_ifexists('UserLogoffType_s', ''),
                UserLogonFlags=column_ifexists('UserLogonFlags_s', ''),
                Parameter2=column_ifexists('Parameter2_s', ''),
                Parameter1=column_ifexists('Parameter1_s', ''),
                Parameter3=column_ifexists('Parameter3_s', ''),
                Line=column_ifexists('Line_s', ''),
                ErrorStatus=column_ifexists('ErrorStatus_s', ''),
                Facility=column_ifexists('Facility_s', ''),
                File=column_ifexists('File_s', ''),
                PublicKeys=column_ifexists('PublicKeys_s', ''),
                HandleCreated=column_ifexists('HandleCreated_s', ''),
                ExtendedKeyUsages=column_ifexists('ExtendedKeyUsages_s', ''),
                FileSigningTime=column_ifexists('FileSigningTime_s', ''),
                Object1Name=column_ifexists('Object1Name_s', ''),
                Object1Type=column_ifexists('Object1Type_s', ''),
                Certificate=column_ifexists('Certificate_s', ''),
                RpcClientProcessId=column_ifexists('RpcClientProcessId_s', ''),
                SyntheticPR2Flags=column_ifexists('SyntheticPR2Flags_s', ''),
                MachOSubType=column_ifexists('MachOSubType_s', ''),
                SessionProcessId=column_ifexists('SessionProcessId_s', ''),
                SVUID=column_ifexists('SVUID_s', ''),
                ProcessGroupId=column_ifexists('ProcessGroupId_s', ''),
                GID=column_ifexists('GID_s', ''),
                SVGID=column_ifexists('SVGID_s', ''),
                UID=column_ifexists('UID_s', ''),
                RGID=column_ifexists('RGID_s', ''),
                RUID=column_ifexists('RUID_s', ''),
                NeighborList=column_ifexists('NeighborList_s', ''),
                DownloadServer=column_ifexists('DownloadServer_s', ''),
                DownloadPath=column_ifexists('DownloadPath_s', ''),
                DownloadPort=column_ifexists('DownloadPort_s', ''),
                CompletionEventId=column_ifexists('CompletionEventId_s', ''),
                IsTransactedFile=column_ifexists('IsTransactedFile_s', ''),
                WindowStation=column_ifexists('WindowStation_s', ''),
                BoundingLimitCount=column_ifexists('BoundingLimitCount_s', ''),
                ProcessBehaviorBitfield=column_ifexists('ProcessBehaviorBitfield_s', ''),
                Desktop=column_ifexists('Desktop_s', ''),
                PatternId=column_ifexists('PatternId_s', ''),
                ExclusionType=column_ifexists('ExclusionType_s', ''),
                ExclusionSource=column_ifexists('ExclusionSource_s', ''),
                DriverLoadFlags=column_ifexists('DriverLoadFlags_s', ''),
                CompanyName=column_ifexists('CompanyName_s', ''),
                OriginalFilename=column_ifexists('OriginalFilename_s', ''),
                FileVersion=column_ifexists('FileVersion_s', ''),
                GrandParentBaseFileName=column_ifexists('GrandParentBaseFileName_s', ''),
                ShowWindowFlags=column_ifexists('ShowWindowFlags_s', ''),
                ThreadStartAddress=column_ifexists('ThreadStartAddress_s', ''),
                InjectedThreadFlag=column_ifexists('InjectedThreadFlag_s', ''),
                UserThread=column_ifexists('UserThread_s', ''),
                TargetThreadModule=column_ifexists('TargetThreadModule_s', ''),
                TargetThreadId=column_ifexists('TargetThreadId_s', ''),
                ThreadStartContext=column_ifexists('ThreadStartContext_s', ''),
                SourceThreadStartAddress=column_ifexists('SourceThreadStartAddress_s', ''),
                InterfaceGuid=column_ifexists('InterfaceGuid_g', ''),
                InterfaceVersion=column_ifexists('InterfaceVersion_s', ''),
                RpcClientThreadId=column_ifexists('RpcClientThreadId_s', ''),
                TaskXml=column_ifexists('TaskXml_s', ''),
                TaskAuthor=column_ifexists('TaskAuthor_s', ''),
                TaskName=column_ifexists('TaskName_s', ''),
                RpcOpNum=column_ifexists('RpcOpNum_s', ''),
                TaskExecArguments=column_ifexists('TaskExecArguments_s', ''),
                TaskExecCommand=column_ifexists('TaskExecCommand_s', ''),
                RpcNestingLevel=column_ifexists('RpcNestingLevel_s', ''),
                ErrorLocation=column_ifexists('ErrorLocation_s', ''),
                ErrorReason=column_ifexists('ErrorReason_s', ''),
                Parameter64_1=column_ifexists('Parameter64_1_s', ''),
                ErrorSource=column_ifexists('ErrorSource_s', ''),
                ParameterSizedBuffer_1=column_ifexists('ParameterSizedBuffer_1_g', ''),
                ErrorCode=column_ifexists('ErrorCode_s', ''),
                DeviceProductId=column_ifexists('DeviceProductId_s', ''),
                DeviceVersion=column_ifexists('DeviceVersion_s', ''),
                DeviceTimeStamp=column_ifexists('DeviceTimeStamp_s', ''),
                DeviceInstanceId=column_ifexists('DeviceInstanceId_s', ''),
                DeviceDescriptorSetHash=column_ifexists('DeviceDescriptorSetHash_s', ''),
                DeviceVendorId=column_ifexists('DeviceVendorId_s', ''),
                DeviceManufacturer=column_ifexists('DeviceManufacturer_s', ''),
                DeviceProduct=column_ifexists('DeviceProduct_s', ''),
                GroupRid=column_ifexists('GroupRid_s', ''),
                UserRid=column_ifexists('UserRid_s', ''),
                DomainSid=column_ifexists('DomainSid_s', ''),
                LightningLatencyState=column_ifexists('LightningLatencyState_s', ''),
                UnixMode=column_ifexists('UnixMode_s', ''),
                VnodeType=column_ifexists('VnodeType_s', ''),
                TargetDirectoryName=column_ifexists('TargetDirectoryName_s', ''),
                ApiReturnValue=column_ifexists('ApiReturnValue_s', ''),
                ServiceDisplayName=column_ifexists('ServiceDisplayName_s', ''),
                LinkName=column_ifexists('LinkName_s', ''),
                VersionInfo=column_ifexists('VersionInfo_s', ''),
                LanguageId=column_ifexists('LanguageId_s', ''),
                AsepFlags=column_ifexists('AsepFlags_s', ''),
                RegObjectName=column_ifexists('RegObjectName_s', ''),
                Data1=column_ifexists('Data1_s', ''),
                RegOperationType=column_ifexists('RegOperationType_s', ''),
                ProcessArgs=column_ifexists('TargetCommandLineParameters_s', ''),
                RegStringValue=column_ifexists('RegStringValue_s', ''),
                RegType=column_ifexists('RegType_s', ''),
                AsepClass=column_ifexists('AsepClass_s', ''),
                AsepIndex=column_ifexists('AsepIndex_s', ''),
                RegValueName=column_ifexists('RegValueName_s', ''),
                AsepValueType=column_ifexists('AsepValueType_s', ''),
                LocalSession=column_ifexists('LocalSession_s', ''),
                DstDvcHostname=column_ifexists('ClientComputerName_s', ''),
                PrivilegesBitmask=column_ifexists('PrivilegesBitmask_s', ''),
                EnabledPrivilegesBitmask=column_ifexists('EnabledPrivilegesBitmask_s', ''),
                UserGroupsBitmask=column_ifexists('UserGroupsBitmask_s', ''),
                Timeout=column_ifexists('Timeout_s', ''),
                ProcessCount=column_ifexists('ProcessCount_s', ''),
                SuppressType=column_ifexists('SuppressType_s', ''),
                BoundedCount=column_ifexists('BoundedCount_s', ''),
                IP6Records=column_ifexists('IP6Records_s', ''),
                FirstIP6Record=column_ifexists('FirstIP6Record_s', ''),
                WmiQuery=column_ifexists('WmiQuery_s', ''),
                WmiNamespaceName=column_ifexists('WmiNamespaceName_s', ''),
                RegClassificationIndex=column_ifexists('RegClassificationIndex_s', ''),
                RegClassificationFlags=column_ifexists('RegClassificationFlags_s', ''),
                RegClassification=column_ifexists('RegClassification_s', ''),
                SystemTableIndex=column_ifexists('SystemTableIndex_s', ''),
                ScreenshotType=column_ifexists('ScreenshotType_s', ''),
                SubStatus=column_ifexists('SubStatus_s', ''),
                UmppaInjectAbortCount=column_ifexists('UmppaInjectAbortCount_s', ''),
                UmppaInjectFailedCount=column_ifexists('UmppaInjectFailedCount_s', ''),
                UmppaInjectionType=column_ifexists('UmppaInjectionType_s', ''),
                UmppaInjectLoadFailCount=column_ifexists('UmppaInjectLoadFailCount_s', ''),
                UmppaInjectCfgCheckCount=column_ifexists('UmppaInjectCfgCheckCount_s', ''),
                UmppaInjectExtensionErrorCount=column_ifexists('UmppaInjectExtensionErrorCount_s', ''),
                UmppaInjectInvalidThreadCount=column_ifexists('UmppaInjectInvalidThreadCount_s', ''),
                UmppaInjectFileSectionCount=column_ifexists('UmppaInjectFileSectionCount_s', ''),
                TotalCount=column_ifexists('TotalCount_s', ''),
                UmppaInjectLoadErrorCount=column_ifexists('UmppaInjectLoadErrorCount_s', ''),
                UmppaInjectBadAlertCount=column_ifexists('UmppaInjectBadAlertCount_s', ''),
                UmppaInjectApcInsertionCount=column_ifexists('UmppaInjectApcInsertionCount_s', ''),
                UmppaInjectCopyFailCount=column_ifexists('UmppaInjectCopyFailCount_s', ''),
                FirewallRule=column_ifexists('FirewallRule_s', ''),
                RegNumericValue=column_ifexists('RegNumericValue_s', ''),
                VolumeDriveLetter=column_ifexists('VolumeDriveLetter_s', ''),
                VolumeSnapshotName=column_ifexists('VolumeSnapshotName_s', ''),
                VolumeName=column_ifexists('VolumeName_s', ''),
                UserCanonical=column_ifexists('UserCanonical_s', ''),
                LogonId=column_ifexists('LogonId_s', ''),
                ConfigStateData=column_ifexists('ConfigStateData_s', ''),
                FirewallProfile=column_ifexists('FirewallProfile_s', ''),
                FirewallOption=column_ifexists('FirewallOption_s', ''),
                FirewallOptionNumericValue=column_ifexists('FirewallOptionNumericValue_s', ''),
                SmbShareName=column_ifexists('SmbShareName_s', ''),
                TargetSHA256HashData=column_ifexists('TargetSHA256HashData_s', ''),
                IsCpuDataCommonOnAllCores=column_ifexists('IsCpuDataCommonOnAllCores_s', ''),
                SpibarDataFrap=column_ifexists('SpibarDataFrap_s', ''),
                EfiVariableDbxSha256Hash=column_ifexists('EfiVariableDbxSha256Hash_s', ''),
                PciConfigDataBgsm=column_ifexists('PciConfigDataBgsm_s', ''),
                PciConfigDataDpr=column_ifexists('PciConfigDataDpr_s', ''),
                CpuDataCommonSmrrSupported=column_ifexists('CpuDataCommonSmrrSupported_s', ''),
                SpibarDataHsfc=column_ifexists('SpibarDataHsfc_s', ''),
                EfiVariableSecureBoot=column_ifexists('EfiVariableSecureBoot_s', ''),
                PciConfigDataMesegMask=column_ifexists('PciConfigDataMesegMask_s', ''),
                PciConfigDataTolud=column_ifexists('PciConfigDataTolud_s', ''),
                EfiVariableDbxAttributes=column_ifexists('EfiVariableDbxAttributes_s', ''),
                PciConfigDataPavpc=column_ifexists('PciConfigDataPavpc_s', ''),
                EfiVariableCustomModeAttributes=column_ifexists('EfiVariableCustomModeAttributes_s', ''),
                SpibarDataFreg3=column_ifexists('SpibarDataFreg3_s', ''),
                SpibarDataFreg4=column_ifexists('SpibarDataFreg4_s', ''),
                SpibarDataFreg1=column_ifexists('SpibarDataFreg1_s', ''),
                SpibarDataFreg2=column_ifexists('SpibarDataFreg2_s', ''),
                SpibarDataFreg0=column_ifexists('SpibarDataFreg0_s', ''),
                EfiSupported=column_ifexists('EfiSupported_s', ''),
                EfiVariablePkAttributes=column_ifexists('EfiVariablePkAttributes_s', ''),
                CpuDataCommonPrmrrUncorePhysicalMask=column_ifexists('CpuDataCommonPrmrrUncorePhysicalMask_s', ''),
                PciConfigDataGenPmconA=column_ifexists('PciConfigDataGenPmconA_s', ''),
                PciConfigDataTsegmb=column_ifexists('PciConfigDataTsegmb_s', ''),
                SpibarDataVscc0=column_ifexists('SpibarDataVscc0_s', ''),
                EfiVariablePkSha256Hash=column_ifexists('EfiVariablePkSha256Hash_s', ''),
                SpibarDataVscc1=column_ifexists('SpibarDataVscc1_s', ''),
                CpuDataCommonSmrrPhysicalMask=column_ifexists('CpuDataCommonSmrrPhysicalMask_s', ''),
                NorthBridgeDeviceId=column_ifexists('NorthBridgeDeviceId_s', ''),
                IsNorthBridgeSupported=column_ifexists('IsNorthBridgeSupported_s', ''),
                PciConfigDataTom=column_ifexists('PciConfigDataTom_s', ''),
                EfiVariableKekSha256Hash=column_ifexists('EfiVariableKekSha256Hash_s', ''),
                SouthBridgeVendorId=column_ifexists('SouthBridgeVendorId_s', ''),
                EfiVariableSignatureSupport=column_ifexists('EfiVariableSignatureSupport_s', ''),
                MmioDataTco1Cnt=column_ifexists('MmioDataTco1Cnt_s', ''),
                EfiVariableKekAttributes=column_ifexists('EfiVariableKekAttributes_s', ''),
                FirmwareAnalysisCpuSupported=column_ifexists('FirmwareAnalysisCpuSupported_s', ''),
                MmioDataSmiEn=column_ifexists('MmioDataSmiEn_s', ''),
                CpuDataCommonPrmrrUncoreSupported=column_ifexists('CpuDataCommonPrmrrUncoreSupported_s', ''),
                NorthBridgeVendorId=column_ifexists('NorthBridgeVendorId_s', ''),
                CpuDataCommonMsrApicBase=column_ifexists('CpuDataCommonMsrApicBase_s', ''),
                EfiVariableDbAttributes=column_ifexists('EfiVariableDbAttributes_s', ''),
                SpibarDataPr2=column_ifexists('SpibarDataPr2_s', ''),
                SpibarDataBfpr=column_ifexists('SpibarDataBfpr_s', ''),
                SpibarDataPr1=column_ifexists('SpibarDataPr1_s', ''),
                EfiVariableSecureBootAttributes=column_ifexists('EfiVariableSecureBootAttributes_s', ''),
                SpibarDataPr0=column_ifexists('SpibarDataPr0_s', ''),
                IsSouthBridgeSupported=column_ifexists('IsSouthBridgeSupported_s', ''),
                PciConfigDataHfsts1=column_ifexists('PciConfigDataHfsts1_s', ''),
                CpuDataCommonMsrFeatureControl=column_ifexists('CpuDataCommonMsrFeatureControl_s', ''),
                PciConfigDataRemaplimit=column_ifexists('PciConfigDataRemaplimit_s', ''),
                CpuDataCommonSiliconDebugFeatureControl=column_ifexists('CpuDataCommonSiliconDebugFeatureControl_s', ''),
                CpuDataCommonSmrrPhysicalBase=column_ifexists('CpuDataCommonSmrrPhysicalBase_s', ''),
                SouthBridgeDeviceId=column_ifexists('SouthBridgeDeviceId_s', ''),
                CpuDataCommonPrmrrPhysicalMask=column_ifexists('CpuDataCommonPrmrrPhysicalMask_s', ''),
                EfiVariableDbSha256Hash=column_ifexists('EfiVariableDbSha256Hash_s', ''),
                SpibarDataHsfs=column_ifexists('SpibarDataHsfs_s', ''),
                PciConfigDataRemapbase=column_ifexists('PciConfigDataRemapbase_s', ''),
                EfiVariableCustomMode=column_ifexists('EfiVariableCustomMode_s', ''),
                PciConfigDataGgc=column_ifexists('PciConfigDataGgc_s', ''),
                PciConfigDataTouud=column_ifexists('PciConfigDataTouud_s', ''),
                SpibarDataPr4=column_ifexists('SpibarDataPr4_s', ''),
                SpibarDataPr3=column_ifexists('SpibarDataPr3_s', ''),
                CpuDataCommonPrmrrSupported=column_ifexists('CpuDataCommonPrmrrSupported_s', ''),
                PciConfigDataSmramc=column_ifexists('PciConfigDataSmramc_s', ''),
                EfiVariableSignatureSupportAttributes=column_ifexists('EfiVariableSignatureSupportAttributes_s', ''),
                PciConfigDataBdsm=column_ifexists('PciConfigDataBdsm_s', ''),
                EfiVariableSetupModeAttributes=column_ifexists('EfiVariableSetupModeAttributes_s', ''),
                EfiVariableSetupMode=column_ifexists('EfiVariableSetupMode_s', ''),
                PciConfigDataBiosCntl=column_ifexists('PciConfigDataBiosCntl_s', ''),
                PciConfigDataMesegBase=column_ifexists('PciConfigDataMesegBase_s', ''),
                SourceFileName=column_ifexists('SourceFileName_s', ''),
                NewFileIdentifier=column_ifexists('NewFileIdentifier_s', ''),
                FeatureVector=column_ifexists('FeatureVector_s', ''),
                ModelPrediction=column_ifexists('ModelPrediction_s', ''),
                Malicious=column_ifexists('Malicious_s', ''),
                FeatureExtractionVersion=column_ifexists('FeatureExtractionVersion_s', ''),
                FXFileSize=column_ifexists('FXFileSize_s', ''),
                MLModelVersion=column_ifexists('MLModelVersion_s', ''),
                FontBufferLength=column_ifexists('FontBufferLength_s', ''),
                FontFileCount=column_ifexists('FontFileCount_s', ''),
                FontLoadOperation=column_ifexists('FontLoadOperation_s', ''),
                FontBuffer=column_ifexists('FontBuffer_s', ''),
                FontFileName=column_ifexists('FontFileName_s', ''),
                TemplateInstanceId=column_ifexists('TemplateInstanceId_s', ''),
                PatternDisposition=column_ifexists('PatternDisposition_s', ''),
                ServicePackMajor=column_ifexists('ServicePackMajor_s', ''),
                ProductSku=column_ifexists('ProductSku_s', ''),
                PointerSize=column_ifexists('PointerSize_s', ''),
                ProductName=column_ifexists('ProductName_s', ''),
                AgentVersion=column_ifexists('AgentVersion_s', ''),
                ServicePackMinor=column_ifexists('ServicePackMinor_s', ''),
                SuiteMask=column_ifexists('SuiteMask_s', ''),
                SubBuildNumber=column_ifexists('SubBuildNumber_s', ''),
                PlatformId=column_ifexists('PlatformId_s', ''),
                BuildType=column_ifexists('BuildType_s', ''),
                MajorVersion=column_ifexists('MajorVersion_s', ''),
                ProductType=column_ifexists('ProductType_s', ''),
                MinorVersion=column_ifexists('MinorVersion_s', ''),
                CheckedBuild=column_ifexists('CheckedBuild_s', ''),
                BuildNumber=column_ifexists('BuildNumber_s', ''),
                RFMState=column_ifexists('RFMState_s', ''),
                FirmwareAnalysisEclControlInterfaceVersion=column_ifexists('FirmwareAnalysisEclControlInterfaceVersion_s', ''),
                FirmwareAnalysisEclConsumerInterfaceVersion=column_ifexists('FirmwareAnalysisEclConsumerInterfaceVersion_s', ''),
                BootTimeFunctionalityLevel=column_ifexists('BootTimeFunctionalityLevel_s', ''),
                ReasonOfFunctionalityLevel=column_ifexists('ReasonOfFunctionalityLevel_s', ''),
                CurrentFunctionalityLevel=column_ifexists('CurrentFunctionalityLevel_s', ''),
                PciAttachmentState=column_ifexists('PciAttachmentState_s', ''),
                LocalAddressIP6=column_ifexists('LocalAddressIP6_s', ''),
                RemoteAddressIP6=column_ifexists('RemoteAddressIP6_s', ''),
                RegBinaryValue=column_ifexists('RegBinaryValue_s', ''),
                ServiceDescription=column_ifexists('ServiceDescription_s', ''),
                ServiceSecurity=column_ifexists('ServiceSecurity_s', ''),
                ServiceImagePath=column_ifexists('ServiceImagePath_s', ''),
                ServiceStart=column_ifexists('ServiceStart_s', ''),
                ServiceType=column_ifexists('ServiceType_s', ''),
                ServiceFailureActions=column_ifexists('ServiceFailureActions_s', ''),
                ServiceErrorControl=column_ifexists('ServiceErrorControl_s', ''),
                SymbolicLinkName=column_ifexists('SymbolicLinkName_s', ''),
                SymbolicLinkTarget=column_ifexists('SymbolicLinkTarget_s', ''),
                DevicePropertyClassName=column_ifexists('DevicePropertyClassName_s', ''),
                DeviceActiveConfigurationNumber=column_ifexists('DeviceActiveConfigurationNumber_s', ''),
                DevicePropertyClassGuid=column_ifexists('DevicePropertyClassGuid_g', ''),
                DeviceUsbSubclass=column_ifexists('DeviceUsbSubclass_s', ''),
                ParentHubInstanceId=column_ifexists('ParentHubInstanceId_s', ''),
                DeviceConnectionStatus=column_ifexists('DeviceConnectionStatus_s', ''),
                DeviceUsbClass=column_ifexists('DeviceUsbClass_s', ''),
                ParentHubPort=column_ifexists('ParentHubPort_s', ''),
                DevicePropertyManufacturer=column_ifexists('DevicePropertyManufacturer_s', ''),
                DevicePropertyLocationInformation=column_ifexists('DevicePropertyLocationInformation_s', ''),
                DeviceProtocol=column_ifexists('DeviceProtocol_s', ''),
                DevicePropertyDeviceDescription=column_ifexists('DevicePropertyDeviceDescription_s', ''),
                DeviceUsbVersion=column_ifexists('DeviceUsbVersion_s', ''),
                ModuleBaseAddress=column_ifexists('ModuleBaseAddress_s', ''),
                ModuleSize=column_ifexists('ModuleSize_s', ''),
                IsOnClearCaseMvfs=column_ifexists('IsOnClearCaseMvfs_s', ''),
                DllCharacteristics=column_ifexists('DllCharacteristics_s', ''),
                ActiveCpuCount=column_ifexists('ActiveCpuCount_s', ''),
                MemoryTotal=column_ifexists('MemoryTotal_s', ''),
                BillingType=column_ifexists('BillingType_s', ''),
                ConnectionCipher=column_ifexists('ConnectionCipher_s', ''),
                ConnectType=column_ifexists('ConnectType_s', ''),
                ConnectionProtocol=column_ifexists('ConnectionProtocol_s', ''),
                ConnectionHash=column_ifexists('ConnectionHash_s', ''),
                ConnectTime=column_ifexists('ConnectTime_s', ''),
                ConnectionHashStrength=column_ifexists('ConnectionHashStrength_s', ''),
                FailedConnectCount=column_ifexists('FailedConnectCount_s', ''),
                ConnectionCipherStrength=column_ifexists('ConnectionCipherStrength_s', ''),
                ConnectionExchangeStrength=column_ifexists('ConnectionExchangeStrength_s', ''),
                ConnectionExchange=column_ifexists('ConnectionExchange_s', ''),
                PreviousConnectTime=column_ifexists('PreviousConnectTime_s', ''),
                FalconServiceServletErrors=column_ifexists('FalconServiceServletErrors_s', ''),
                FalconServiceComponent=column_ifexists('FalconServiceComponent_s', ''),
                FalconServiceServletStarts=column_ifexists('FalconServiceServletStarts_s', ''),
                FalconServiceState=column_ifexists('FalconServiceState_s', ''),
                ScriptContent=column_ifexists('ScriptContent_s', ''),
                OriginalContentLength=column_ifexists('OriginalContentLength_s', ''),
                ScriptingLanguageId=column_ifexists('ScriptingLanguageId_s', ''),
                ParentImageFileName=column_ifexists('ParentImageFileName_s', ''),
                GrandparentImageFileName=column_ifexists('GrandparentImageFileName_s', ''),
                ScriptContentName=column_ifexists('ScriptContentName_s', ''),
                HostProcessType=column_ifexists('HostProcessType_s', ''),
                ProcessParentCommandLine=column_ifexists('ParentCommandLine_s', ''),
                ContentSHA256HashData=column_ifexists('ContentSHA256HashData_s', ''),
                ProcessGrandparentCommandLine=column_ifexists('GrandparentCommandLine_s', '')
    | project
                TimeGenerated, 
                EventVendor,
                EventProduct,
                FileMode,
                DeviceSerialNumber,
                IcmpCode,
                IcmpType,
                LastUpdateInstalledTime,
                RebootRequired,
                PendingUpdateIds,
                InstalledUpdateIds,
                InstalledUpdateExtendedStatus,
                SupersededUpdateIds,
                ConfigurationDescriptorValue,
                ConfigurationDescriptorAttributes,
                DeviceDescriptorUniqueIdentifier,
                ConfigurationDescriptorName,
                ConfigurationDescriptorNumInterfaces,
                ConfigurationDescriptorMaxPowerDraw,
                ScreenshotsTakenCount,
                ExitCode,
                ParentProcessId,
                DstUserIdentity,
                NetworkListenCount,
                SuspiciousRawDiskReadCount,
                NetworkBindCount,
                NetworkRecvAcceptCount,
                ContextData,
                Id,
                NewExecutableWrittenCount,
                ExeAndServiceCount,
                NetworkCloseCount,
                SuspectStackCount,
                CLICreationCount,
                UnsignedModuleLoadCount,
                UserTime,
                EventMessage,
                RawProcessId,
                ContextTimeStamp,
                AllocateVirtualMemoryCount,
                ContextProcessId,
                ServiceEventCount,
                SnapshotFileOpenCount,
                RemovableDiskFileWrittenCount,
                InjectedDllCount,
                ModuleLoadCount,
                UserMemoryProtectExecutableCount,
                NetworkCapableAsepWriteCount,
                TargetProcessId,
                DnsRequestCount,
                ArchiveFileWrittenCount,
                Entitlements,
                Name,
                ProcessStartTime,
                SetThreadContextCount,
                SuspiciousCredentialModuleLoadCount,
                DvcInterfaceGuid,
                Cid,
                FileDeletedCount,
                UserMemoryAllocateExecutableCount,
                DirectoryCreatedCount,
                NetworkConnectCountUdp,
                QueueApcCount,
                ContextThreadId,
                Aip,
                SuspiciousFontLoadCount,
                ConHostId,
                NetworkConnectCount,
                BinaryExecutableWrittenCount,
                CycleTime,
                DvcOs,
                ConHostProcessId,
                PrivilegedProcessHandleCount,
                MaxThreadCount,
                ImageSubsystem,
                GenericFileWrittenCount,
                EffectiveTransmissionClass,
                ScriptEngineInvocationCount,
                RunDllInvocationCount,
                timestamp,
                CreateProcessCount,
                KernelTime,
                DirectoryEnumeratedCount,
                ConfigStateHash,
                AsepWrittenCount,
                SuspiciousDnsRequestCount,
                DocumentFileWrittenCount,
                ProtectVirtualMemoryCount,
                ProcessHashSha256,
                UserMemoryProtectExecutableRemoteCount,
                ConfigBuild,
                UserMemoryAllocateExecutableRemoteCount,
                ExecutableDeletedCount,
                RegKeySecurityDecreasedCount,
                InjectedThreadCount,
                NetworkModuleLoadCount,
                WindowTitle,
                ProcessCreateFlags,
                IntegrityLevel,
                SourceProcessId,
                ProcessHashSha1,
                TokenType,
                ProcessEndTime,
                AuthenticodeHashData,
                ParentBaseFileName,
                SessionId,
                Tags,
                ProcessHashMd5,
                ProcessSxsFlags,
                AuthenticationId,
                WindowFlags,
                ProcessCommandLine,
                ParentAuthenticationId,
                FileName,
                SourceThreadId,
                ProcessParameterFlags,
                SignInfoFlags,
                ChannelVersion,
                ChannelVersionRequired,
                ChannelId,
                DnsResponseType,
                IP4Records,
                CNAMERecords,
                QueryStatus,
                InterfaceIndex,
                DualRequest,
                FirstIP4Record,
                UrlDomain,
                RespondingDnsServer,
                RequestType,
                FirewallRuleId,
                Options,
                MinorFunction,
                FileIdentifier,
                Information,
                ShareAccess,
                FileObject,
                FilePermission,
                Status,
                IrpFlags,
                MajorFunction,
                DesiredAccess,
                OperationFlags,
                TargetFileName,
                CallStackModuleNamesVersion,
                CsaProcessDataCollectionInstanceId,
                CallStackModuleNames,
                CreateProcessType,
                EtwRawProcessId,
                EventMax,
                EtwRawThreadId,
                Flags,
                EventMin,
                RawThreadId,
                SrcIpAddr,
                ConnectionFlags,
                DstIpPort,
                SrcIpPort,
                Protocol,
                DstIpAddr,
                ConnectionDirection,
                InContext,
                NetworkContainmentState,
                ConfigIDBase,
                SensorStateBitMap,
                ConfigurationVersion,
                ConfigIDPlatform,
                ConfigIDBuild,
                ProvisionState,
                Size,
                IsOnNetwork,
                DiskParentDeviceInstanceId,
                TemporaryFileName,
                FileEcpBitmask,
                IsOnRemovableDisk,
                ModuleCharacteristics,
                OriginalEventTimeStamp,
                MappedFromUserMode,
                TreeId,
                PrimaryModule,
                UserIsAdmin,
                LogoffTime,
                LogonTime,
                LogonDomain,
                RemoteAccount,
                UserFlags,
                LogonServer,
                DstUserName,
                LogonType,
                AuthenticationPackage,
                UserPrincipal,
                PasswordLastSet,
                UserLogoffType,
                UserLogonFlags,
                Parameter2,
                Parameter1,
                Parameter3,
                Line,
                ErrorStatus,
                Facility,
                File,
                PublicKeys,
                HandleCreated,
                ExtendedKeyUsages,
                FileSigningTime,
                Object1Name,
                Object1Type,
                Certificate,
                RpcClientProcessId,
                SyntheticPR2Flags,
                MachOSubType,
                SessionProcessId,
                SVUID,
                ProcessGroupId,
                GID,
                SVGID,
                UID,
                RGID,
                RUID,
                NeighborList,
                DownloadServer,
                DownloadPath,
                DownloadPort,
                CompletionEventId,
                IsTransactedFile,
                WindowStation,
                BoundingLimitCount,
                ProcessBehaviorBitfield,
                Desktop,
                PatternId,
                ExclusionType,
                ExclusionSource,
                DriverLoadFlags,
                CompanyName,
                OriginalFilename,
                FileVersion,
                GrandParentBaseFileName,
                ShowWindowFlags,
                ThreadStartAddress,
                InjectedThreadFlag,
                UserThread,
                TargetThreadModule,
                TargetThreadId,
                ThreadStartContext,
                SourceThreadStartAddress,
                InterfaceGuid,
                InterfaceVersion,
                RpcClientThreadId,
                TaskXml,
                TaskAuthor,
                TaskName,
                RpcOpNum,
                TaskExecArguments,
                TaskExecCommand,
                RpcNestingLevel,
                ErrorLocation,
                ErrorReason,
                Parameter64_1,
                ErrorSource,
                ParameterSizedBuffer_1,
                ErrorCode,
                DeviceProductId,
                DeviceVersion,
                DeviceTimeStamp,
                DeviceInstanceId,
                DeviceDescriptorSetHash,
                DeviceVendorId,
                DeviceManufacturer,
                DeviceProduct,
                GroupRid,
                UserRid,
                DomainSid,
                LightningLatencyState,
                UnixMode,
                VnodeType,
                TargetDirectoryName,
                ApiReturnValue,
                ServiceDisplayName,
                LinkName,
                VersionInfo,
                LanguageId,
                AsepFlags,
                RegObjectName,
                Data1,
                RegOperationType,
                ProcessArgs,
                RegStringValue,
                RegType,
                AsepClass,
                AsepIndex,
                RegValueName,
                AsepValueType,
                LocalSession,
                DstDvcHostname,
                PrivilegesBitmask,
                EnabledPrivilegesBitmask,
                UserGroupsBitmask,
                Timeout,
                ProcessCount,
                SuppressType,
                BoundedCount,
                IP6Records,
                FirstIP6Record,
                WmiQuery,
                WmiNamespaceName,
                RegClassificationIndex,
                RegClassificationFlags,
                RegClassification,
                SystemTableIndex,
                ScreenshotType,
                SubStatus,
                UmppaInjectAbortCount,
                UmppaInjectFailedCount,
                UmppaInjectionType,
                UmppaInjectLoadFailCount,
                UmppaInjectCfgCheckCount,
                UmppaInjectExtensionErrorCount,
                UmppaInjectInvalidThreadCount,
                UmppaInjectFileSectionCount,
                TotalCount,
                UmppaInjectLoadErrorCount,
                UmppaInjectBadAlertCount,
                UmppaInjectApcInsertionCount,
                UmppaInjectCopyFailCount,
                FirewallRule,
                RegNumericValue,
                VolumeDriveLetter,
                VolumeSnapshotName,
                VolumeName,
                UserCanonical,
                LogonId,
                ConfigStateData,
                FirewallProfile,
                FirewallOption,
                FirewallOptionNumericValue,
                SmbShareName,
                TargetSHA256HashData,
                IsCpuDataCommonOnAllCores,
                SpibarDataFrap,
                EfiVariableDbxSha256Hash,
                PciConfigDataBgsm,
                PciConfigDataDpr,
                CpuDataCommonSmrrSupported,
                SpibarDataHsfc,
                EfiVariableSecureBoot,
                PciConfigDataMesegMask,
                PciConfigDataTolud,
                EfiVariableDbxAttributes,
                PciConfigDataPavpc,
                EfiVariableCustomModeAttributes,
                SpibarDataFreg3,
                SpibarDataFreg4,
                SpibarDataFreg1,
                SpibarDataFreg2,
                SpibarDataFreg0,
                EfiSupported,
                EfiVariablePkAttributes,
                CpuDataCommonPrmrrUncorePhysicalMask,
                PciConfigDataGenPmconA,
                PciConfigDataTsegmb,
                SpibarDataVscc0,
                EfiVariablePkSha256Hash,
                SpibarDataVscc1,
                CpuDataCommonSmrrPhysicalMask,
                NorthBridgeDeviceId,
                IsNorthBridgeSupported,
                PciConfigDataTom,
                EfiVariableKekSha256Hash,
                SouthBridgeVendorId,
                EfiVariableSignatureSupport,
                MmioDataTco1Cnt,
                EfiVariableKekAttributes,
                FirmwareAnalysisCpuSupported,
                MmioDataSmiEn,
                CpuDataCommonPrmrrUncoreSupported,
                NorthBridgeVendorId,
                CpuDataCommonMsrApicBase,
                EfiVariableDbAttributes,
                SpibarDataPr2,
                SpibarDataBfpr,
                SpibarDataPr1,
                EfiVariableSecureBootAttributes,
                SpibarDataPr0,
                IsSouthBridgeSupported,
                PciConfigDataHfsts1,
                CpuDataCommonMsrFeatureControl,
                PciConfigDataRemaplimit,
                CpuDataCommonSiliconDebugFeatureControl,
                CpuDataCommonSmrrPhysicalBase,
                SouthBridgeDeviceId,
                CpuDataCommonPrmrrPhysicalMask,
                EfiVariableDbSha256Hash,
                SpibarDataHsfs,
                PciConfigDataRemapbase,
                EfiVariableCustomMode,
                PciConfigDataGgc,
                PciConfigDataTouud,
                SpibarDataPr4,
                SpibarDataPr3,
                CpuDataCommonPrmrrSupported,
                PciConfigDataSmramc,
                EfiVariableSignatureSupportAttributes,
                PciConfigDataBdsm,
                EfiVariableSetupModeAttributes,
                EfiVariableSetupMode,
                PciConfigDataBiosCntl,
                PciConfigDataMesegBase,
                SourceFileName,
                NewFileIdentifier,
                FeatureVector,
                ModelPrediction,
                Malicious,
                FeatureExtractionVersion,
                FXFileSize,
                MLModelVersion,
                FontBufferLength,
                FontFileCount,
                FontLoadOperation,
                FontBuffer,
                FontFileName,
                TemplateInstanceId,
                PatternDisposition,
                ServicePackMajor,
                ProductSku,
                PointerSize,
                ProductName,
                AgentVersion,
                ServicePackMinor,
                SuiteMask,
                SubBuildNumber,
                PlatformId,
                BuildType,
                MajorVersion,
                ProductType,
                MinorVersion,
                CheckedBuild,
                BuildNumber,
                RFMState,
                FirmwareAnalysisEclControlInterfaceVersion,
                FirmwareAnalysisEclConsumerInterfaceVersion,
                BootTimeFunctionalityLevel,
                ReasonOfFunctionalityLevel,
                CurrentFunctionalityLevel,
                PciAttachmentState,
                LocalAddressIP6,
                RemoteAddressIP6,
                RegBinaryValue,
                ServiceDescription,
                ServiceSecurity,
                ServiceImagePath,
                ServiceStart,
                ServiceType,
                ServiceFailureActions,
                ServiceErrorControl,
                SymbolicLinkName,
                SymbolicLinkTarget,
                DevicePropertyClassName,
                DeviceActiveConfigurationNumber,
                DevicePropertyClassGuid,
                DeviceUsbSubclass,
                ParentHubInstanceId,
                DeviceConnectionStatus,
                DeviceUsbClass,
                ParentHubPort,
                DevicePropertyManufacturer,
                DevicePropertyLocationInformation,
                DeviceProtocol,
                DevicePropertyDeviceDescription,
                DeviceUsbVersion,
                ModuleBaseAddress,
                ModuleSize,
                IsOnClearCaseMvfs,
                DllCharacteristics,
                ActiveCpuCount,
                MemoryTotal,
                BillingType,
                ConnectionCipher,
                ConnectType,
                ConnectionProtocol,
                ConnectionHash,
                ConnectTime,
                ConnectionHashStrength,
                FailedConnectCount,
                ConnectionCipherStrength,
                ConnectionExchangeStrength,
                ConnectionExchange,
                PreviousConnectTime,
                FalconServiceServletErrors,
                FalconServiceComponent,
                FalconServiceServletStarts,
                FalconServiceState,
                ScriptContent,
                OriginalContentLength,
                ScriptingLanguageId,
                ParentImageFileName,
                GrandparentImageFileName,
                ScriptContentName,
                HostProcessType,
                ProcessParentCommandLine,
                ContentSHA256HashData,
                ProcessGrandparentCommandLine
};
CrowdstrikeReplicatorLogs_view
SchemaVersion: 1.0
DataTypes:
  - DataType: AuditLogs
Type: KQL
Provider: Sentinel
RequiredInputFieldsSets:
  - - Account_Name
    - Account_NTDomain
  - - Account_Name
    - Account_UPNSuffix
  - - Account_AADUserId
  - - Account_SID
BaseQuery: |
  let GetAccountActions = (v_Account_Name:string, v_Account_NTDomain:string, v_Account_UPNSuffix:string, v_Account_AADUserId:string, v_Account_SID:string){
  AuditLogs
  | where OperationName in~ ('Delete user', 'Change user password', 'Reset user password', 'Change password (self-service)',  'Reset password (by admin)', 'Reset password (self-service)','Update user')
  | extend UserPrincipalName = tostring(TargetResources[0].userPrincipalName)
  | extend Account_Name = tostring(split(UserPrincipalName, '@')[0])
  | extend Account_UPNSuffix = tostring(split(UserPrincipalName, '@')[1])
  | extend Action = tostring(parse_json(tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[0])))
  | extend ModifiedProperty = parse_json(Action).displayName
  | extend ModifiedValue = parse_json(Action).newValue
  | extend AADUserId = tostring(TargetResources[0].id)
  | extend DisableUser = iif(ModifiedProperty =~ 'AccountEnabled' and ModifiedValue =~ '[false]', 'True', 'False')
  | union isfuzzy=true (
  SecurityEvent
  | where EventID in (4726, 4740, 4720, 4722, 4725, 4724, 4723)
  | extend OperationName = tostring(EventID)
  | where AccountType =~ "user" or isempty(AccountType)
  | extend Account_Name = TargetUserName, Account_NTDomain = TargetDomainName
  )
  | extend p_Account_Name = case(
  // Handles mixed use scenario of NTDomain\AccountName@UPNSuffix
  v_Account_Name has '@' and v_Account_Name has '\\', tostring(split(tostring(split(v_Account_Name, '\\')[1]),'@')[0]),
  v_Account_Name has '@', tostring(split(v_Account_Name, '@')[0]),
  v_Account_Name has '\\', tostring(split(v_Account_Name, '\\')[1]),
  v_Account_Name
  )
  | extend p_Account_UPNSuffix = case(
  v_Account_UPNSuffix has '@', tostring(split(v_Account_UPNSuffix, '@')[1]),
  v_Account_UPNSuffix has '\\', tostring(split(v_Account_UPNSuffix, '\\')[0]),
  v_Account_UPNSuffix
  )
  | extend p_Account_NTDomain = case(
  v_Account_NTDomain has '\\', tostring(split(v_Account_NTDomain, '\\')[0]),
  // Handles UPN scenario of AccountName@UPNSuffix to pull potential NTDomain from
  v_Account_NTDomain has '@', tostring(split(tostring(split(v_Account_NTDomain, '@')[1]),'.')[0]),
  v_Account_NTDomain
  )
  | where (Account_Name =~ p_Account_Name and (Account_UPNSuffix =~ p_Account_UPNSuffix or Account_NTDomain =~ p_Account_NTDomain)) or AADUserId =~ v_Account_AADUserId or TargetSid =~ v_Account_SID
  };
  GetAccountActions('{{Account_AccountName}}', '{{Account_NTDomain}}', '{{Account_UPNSuffix}}', '{{Account_AADUserId}}', '{{Account_SID}}')
# The queries for the insights.
Insights:
 Id: 6db7f5d1-f41e-46c2-b935-230b36a569e6
 DisplayName: Actions on account
 Description: |
  Summary of actions taken on the specified account, grouped by action: password resets and changes, account lockouts (policy or admin), account creation and deletion, account enabled and disabled
 DefaultTimeRange:
  BeforeRange: 12h
  AfterRange: 12h
 TableQuery:
  ColumnsDefinitions:
  - Header: "Action"
    OutputType: String
    SupportDeepLink: false
  - Header: "Most Recent"
    OutputType: Date
    SupportDeepLink: false
  - Header: "Count"
    OutputType: Number
    SupportDeepLink: true

  QueriesDefinitions:
  # Account Password Resets
    - Filter:     "where OperationName in~ ('Change user password', 'Reset user password', 'Change password (self-service)',  'Reset password (by admin)', 'Reset password (self-service)', '4724', '4723')"
      Summarize:  "summarize MostRecent = max(TimeGenerated), Count = count() by OperationName"
      Project:    "project Title = 'Password Resets', MostRecent, Count"
      LinkColumnsDefinitions:
      - ProjectedName: Count
        Query: "{{BaseQuery}} | {{RowFilter}}"
  # Account Disabled by Policy
    - Filter:     "where OperationName in~ ('Blocked from self-service password reset', '4740')"
      Summarize:  "summarize MostRecent = max(TimeGenerated), Count = count() by OperationName"
      Project:    "project Title = 'Disabled by Policy', MostRecent, Count"
      LinkColumnsDefinitions:
      - ProjectedName: Count
        Query: "{{BaseQuery}} | {{RowFilter}}"
  # Account Disabled by Admin
    - Filter:     "where OperationName  == '4725' or (OperationName  =~ 'Update user' and DisableUser =~ 'True')"
      Summarize:  "summarize MostRecent = max(TimeGenerated), Count = count() by OperationName"
      Project:    "project Title = 'Disabled by Admin', MostRecent, Count"
      LinkColumnsDefinitions:
      - ProjectedName: Count
        Query: "{{BaseQuery}} | {{RowFilter}}"
  # Account Created
    - Filter:     "where OperationName in~ ('Add user', '4720')"
      Summarize:  "summarize MostRecent = max(TimeGenerated), Count = count() by OperationName"
      Project:    "project Title = 'Created', MostRecent, Count"
      LinkColumnsDefinitions:
      - ProjectedName: Count
        Query: "{{BaseQuery}} | {{RowFilter}}"
  # Account Deleted
    - Filter:     "where OperationName in~ ('Delete user', '4726')"
      Summarize:  "summarize MostRecent = max(TimeGenerated), Count = count() by OperationName"
      Project:    "project Title = 'Deleted', MostRecent, Count"
      LinkColumnsDefinitions:
      - ProjectedName: Count
        Query: "{{BaseQuery}} | {{RowFilter}}"
  # Account Deleted or Disabled
    - Filter:     "where OperationName in~ ('4725', 'Blocked from self-service password reset', '4740') or (OperationName  =~ 'Update user' and DisableUser =~ 'True')"
      Summarize:  "summarize MostRecent = max(TimeGenerated), Count = count() by OperationName"
      Project:    "project Title = 'Disabled', MostRecent, Count"
      LinkColumnsDefinitions:
      - ProjectedName: Count
        Query: "{{BaseQuery}} | {{RowFilter}}"
  # Account Created or Enabled
    - Filter:     "where OperationName in~ ('4722', '4767') or (OperationName  =~ 'Update user' and DisableUser =~ 'False')"
      Summarize:  "summarize MostRecent = max(TimeGenerated), Count = count() by OperationName"
      Project:    "project Title = 'Enabled', MostRecent, Count"
      LinkColumnsDefinitions:
      - ProjectedName: Count
        Query: "{{BaseQuery}} | {{RowFilter}}"
  # Account Setting Changed
    - Filter:     "where OperationName in~ ('Update user','4738')"
      Summarize:  "summarize MostRecent = max(TimeGenerated), Count = count() by OperationName"
      Project:    "project Title = 'Setting Changed', MostRecent, Count"
      LinkColumnsDefinitions:
      - ProjectedName: Count
        Query: "{{BaseQuery}} | {{RowFilter}}"
 
 ChartQuery:
  Title: "Actions by type"
  DataSets:
   - Query: "summarize Count = count() by bin(TimeGenerated, 1h), OperationName"
     XColumnName: "TimeGenerated"
     YColumnName: "Count"
     LegendColumnName: "OperationName"
  Type: BarChart

 AdditionalQuery:
  Text: "See all account activity"
  Query: "project TimeGenerated, UserPrincipalName, Account_Name, OperationName, Activity, DisableUser, TargetSid, AADUserId, InitiatedBy, AADTenantId, AccountType, Computer, SubjectAccount, SubjectUserSid, EventData"

{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "MCASActivityPlaybookName": {
      "defaultValue": "Get-MCASActivity",
      "type": "String"
    },
    "APIToken": {
      "defaultValue": "Enter the API token",
      "type": "string"
    },
    "MCASURL": {
      "defaultValue": "Enter the MCAS URL, somedomain.portal.us3.cloudappsecurity.com",
      "type": "string"
    },
    "workspaceId": {
      "type": "string"
    },
    "workSpaceKey": {
      "type": "string"
    }
  },
  "variables": {
    "KeyVaultName": "[tolower(concat('mcasactkv', uniqueString(resourceGroup().id, subscription().id)))]",
    "SecretName": "MCASAPIToken",
    "StorageAccountName": "[tolower(concat('mcasactsa', uniqueString(resourceGroup().id, subscription().id)))]",
    "StorageContainerName": "mcasactivitylogicapp",
    "AzureBlobConnectionName": "azureblob-MCASActivity",
    "AzureLogAnalyticsDataCollectorConnectionName": "azureloganalyticsdatacollector-MCASActivity",
    "KeyVaultConnectionName": "keyvault-MCASActivity"

  },
  "resources": [
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2016-10-01",
      "name": "[variables('KeyVaultName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "sku": {
          "family": "A",
          "name": "Standard"
        },
        "tenantId": "[subscription().tenantId]",
        "accessPolicies": [],
        "enabledForDeployment": false,
        "enabledForDiskEncryption": false,
        "enabledForTemplateDeployment": true,
        "enableSoftDelete": true
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2016-10-01",
      "name": "[concat(variables('KeyVaultName'), '/', variables('SecretName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('KeyVaultName'))]"
      ],
      "properties": {
        "value": "[parameters('APIToken')]",
        "contentType": "string",
        "attributes": {
          "enabled": true
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-06-01",
      "name": "[variables('StorageAccountName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "properties": {
        "largeFileSharesState": "Disabled",
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [
          ],
          "ipRules": [
          ],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "file": {
              "keyType": "Account",
              "enabled": true
            },
            "blob": {
              "keyType": "Account",
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2019-06-01",
      "name": "[concat(variables('StorageAccountName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName'))]"
      ],
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "properties": {
        "cors": {
          "corsRules": [
          ]
        },
        "deleteRetentionPolicy": {
          "enabled": false
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2019-06-01",
      "name": "[concat(variables('StorageAccountName'), '/default/', variables('StorageContainerName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('StorageAccountName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName'))]"
      ],
      "properties": {
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[variables('AzureBlobConnectionName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName'))]"
      ],
      "properties": {
        "displayName": "[variables('AzureBlobConnectionName')]",
        "customParameterValues": {
        },
        "api": {
          "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azureblob')]"
        },
        "parameterValues": {
          "accountname": "[variables('AzureBlobConnectionName')]",
          "accesskey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName')), '2019-06-01').keys[0].value]"
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[variables('AzureLogAnalyticsDataCollectorConnectionName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "displayName": "[variables('AzureLogAnalyticsDataCollectorConnectionName')]",
        "customParameterValues": {
        },
        "api": {
          "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azureloganalyticsdatacollector')]"
        },
        "parameterValues": {
          "username": "[parameters('workspaceId')]",
          "password": "[parameters('workSpaceKey')]"
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[variables('KeyVaultConnectionName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "displayName": "[variables('KeyVaultConnectionName')]",
        "customParameterValues": {},
        "api": {
          "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/keyvault')]"
        },
        "parameterValueType": "Alternative",
        "alternativeParameterValues": {
          "vaultName": "[variables('KeyVaultName')]"
        }
      }
    },
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2017-07-01",
      "name": "[parameters('MCASActivityPlaybookName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', variables('AzureBlobConnectionName'))]",
        "[resourceId('Microsoft.Web/connections', variables('AzureLogAnalyticsDataCollectorConnectionName'))]",
        "[resourceId('Microsoft.Web/connections', variables('KeyVaultConnectionName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices/containers', variables('StorageAccountName'), 'default', variables('StorageContainerName'))]",
        "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('KeyVaultName'), variables('SecretName'))]"
      ],
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "state": "Disabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "actions": {
            "Condition_2": {
              "actions": {
                "Set_variable_2": {
                  "inputs": {
                    "name": "StartTime",
                    "value": "@ticks(addMinutes(utcNow(), -5))"
                  },
                  "runAfter": {},
                  "type": "SetVariable"
                },
                "Set_variable_3": {
                  "inputs": {
                    "name": "StartTimeEpoch",
                    "value": "@div(sub(variables('StartTime'), variables('Ticks1970')),10000)"
                  },
                  "runAfter": {
                    "Set_variable_2": [
                      "Succeeded"
                    ]
                  },
                  "type": "SetVariable"
                }
              },
              "else": {
                "actions": {
                  "Set_variable_4": {
                    "inputs": {
                      "name": "StartTimeEpoch",
                      "value": "@body('Parse_JSON_2')?['lastRunEpoch']"
                    },
                    "runAfter": {},
                    "type": "SetVariable"
                  }
                }
              },
              "expression": {
                "and": [
                  {
                    "equals": [
                      "@body('Parse_JSON_2')?['lastRunEpoch']",
                      0
                    ]
                  }
                ]
              },
              "runAfter": {
                "Initialize_variable_6": [
                  "Succeeded"
                ]
              },
              "type": "If"
            },
            "Get_blob_content": {
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azureblob']['connectionId']"
                  }
                },
                "method": "get",
                "path": "/datasets/default/files/@{encodeURIComponent(encodeURIComponent('/mcasactivitylogicapp/lastrun-MCAS.json'))}/content",
                "queries": {
                  "inferContentType": true
                }
              },
              "runAfter": {
                "Get_secret_2": [
                  "Succeeded"
                ]
              },
              "type": "ApiConnection"
            },
            "Get_secret_2": {
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['keyvault']['connectionId']"
                  }
                },
                "method": "get",
                "path": "/secrets/@{encodeURIComponent('MCASAPIToken')}/value"
              },
              "runAfter": {},
              "runtimeConfiguration": {
                "secureData": {
                  "properties": [
                    "outputs"
                  ]
                }
              },
              "type": "ApiConnection"
            },
            "Initialize_variable": {
              "inputs": {
                "variables": [
                  {
                    "name": "RunTime",
                    "type": "string",
                    "value": "@{utcNow()}"
                  }
                ]
              },
              "runAfter": {
                "Condition_2": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable"
            },
            "Initialize_variable_2": {
              "inputs": {
                "variables": [
                  {
                    "name": "TempArrayVar",
                    "type": "array"
                  }
                ]
              },
              "runAfter": {
                "Parse_JSON_2": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable"
            },
            "Initialize_variable_3": {
              "inputs": {
                "variables": [
                  {
                    "name": "StartTime",
                    "type": "integer"
                  }
                ]
              },
              "runAfter": {
                "Initialize_variable_5": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable"
            },
            "Initialize_variable_4": {
              "inputs": {
                "variables": [
                  {
                    "name": "EndTime",
                    "type": "integer",
                    "value": "@ticks(variables('RunTime'))"
                  }
                ]
              },
              "runAfter": {
                "Initialize_variable": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable"
            },
            "Initialize_variable_5": {
              "inputs": {
                "variables": [
                  {
                    "name": "Ticks1970",
                    "type": "integer",
                    "value": "@ticks('1970-01-01')"
                  }
                ]
              },
              "runAfter": {
                "Initialize_variable_2": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable"
            },
            "Initialize_variable_6": {
              "inputs": {
                "variables": [
                  {
                    "name": "StartTimeEpoch",
                    "type": "integer"
                  }
                ]
              },
              "runAfter": {
                "Initialize_variable_3": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable"
            },
            "Initialize_variable_7": {
              "inputs": {
                "variables": [
                  {
                    "name": "EndTimeEpoch",
                    "type": "integer",
                    "value": "@div(sub(variables('EndTime'), variables('Ticks1970')),10000)"
                  }
                ]
              },
              "runAfter": {
                "Initialize_variable_4": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable"
            },
            "Initialize_variable_8": {
              "inputs": {
                "variables": [
                  {
                    "name": "Skip",
                    "type": "integer",
                    "value": 0
                  }
                ]
              },
              "runAfter": {
                "Initialize_variable_7": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable"
            },
            "Initialize_variable_9": {
              "inputs": {
                "variables": [
                  {
                    "name": "HasNext",
                    "type": "string",
                    "value": "notnull"
                  }
                ]
              },
              "runAfter": {
                "Initialize_variable_8": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable"
            },
            "Parse_JSON_2": {
              "inputs": {
                "content": "@json(body('Get_blob_content'))",
                "schema": {
                  "properties": {
                    "lastRun": {
                      "type": "string"
                    },
                    "lastRunEpoch": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "runAfter": {
                "Get_blob_content": [
                  "Succeeded"
                ]
              },
              "type": "ParseJson"
            },
            "Until_2": {
              "actions": {
                "Condition": {
                  "actions": {
                    "Compose": {
                      "inputs": "@variables('TempArrayVar')",
                      "runAfter": {
                        "For_each": [
                          "Succeeded"
                        ]
                      },
                      "type": "Compose"
                    },
                    "For_each": {
                      "actions": {
                        "Append_to_array_variable": {
                          "inputs": {
                            "name": "TempArrayVar",
                            "value": "@items('For_each')"
                          },
                          "runAfter": {},
                          "type": "AppendToArrayVariable"
                        }
                      },
                      "foreach": "@body('HTTP')['data']",
                      "runAfter": {},
                      "type": "Foreach"
                    },
                    "Send_Data": {
                      "inputs": {
                        "body": "@{outputs('Compose')}",
                        "headers": {
                          "Log-Type": "MCASActivity"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azureloganalyticsdatacollector']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/api/logs"
                      },
                      "runAfter": {
                        "Compose": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection"
                    }
                  },
                  "expression": {
                    "and": [
                      {
                        "not": {
                          "equals": [
                            "@length(body('HTTP')['data'])",
                            0
                          ]
                        }
                      }
                    ]
                  },
                  "runAfter": {
                    "Parse_JSON": [
                      "Succeeded"
                    ]
                  },
                  "type": "If"
                },
                "HTTP": {
                  "inputs": {
                    "body": {
                      "filters": {
                        "date": {
                          "range": {
                            "end": "@variables('EndTimeEpoch')",
                            "start": "@variables('StartTimeEpoch')"
                          }
                        }
                      },
                      "skip": "@variables('Skip')"
                    },
                    "headers": {
                      "Authorization": "Token @{body('Get_secret_2')?['value']}"
                    },
                    "method": "POST",
                    "uri": "[concat(parameters('MCASURL'),'/api/v1/activities/')]"
                  },
                  "runAfter": {},
                  "type": "Http"
                },
                "Increment_variable": {
                  "inputs": {
                    "name": "Skip",
                    "value": 100
                  },
                  "runAfter": {
                    "Condition": [
                      "Succeeded"
                    ]
                  },
                  "type": "IncrementVariable"
                },
                "Parse_JSON": {
                  "inputs": {
                    "content": "@body('HTTP')",
                    "schema": {
                      "properties": {
                        "body": {
                          "properties": {
                            "data": {
                              "items": {
                                "properties": {
                                  "_id": {
                                    "type": "string"
                                  },
                                  "aadTenantId": {
                                    "type": "string"
                                  },
                                  "appId": {
                                    "type": "integer"
                                  },
                                  "appName": {
                                    "type": "string"
                                  },
                                  "classifications": {
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "collected": {
                                    "properties": {
                                      "o365": {
                                        "properties": {
                                          "blobCreated": {
                                            "type": "string"
                                          },
                                          "blobId": {
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "confidenceLevel": {
                                    "type": "integer"
                                  },
                                  "created": {
                                    "type": "integer"
                                  },
                                  "createdRaw": {
                                    "type": "integer"
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "description_id": {
                                    "type": "string"
                                  },
                                  "description_metadata": {
                                    "properties": {
                                      "colon": {
                                        "type": "string"
                                      },
                                      "dash": {
                                        "type": "string"
                                      },
                                      "event_category": {
                                        "type": "string"
                                      },
                                      "target_object": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "device": {
                                    "properties": {
                                      "clientIP": {
                                        "type": "string"
                                      },
                                      "countryCode": {
                                        "type": "string"
                                      },
                                      "userAgent": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "entityData": {
                                    "properties": {
                                      "0": {
                                        "properties": {
                                          "displayName": {
                                            "type": "string"
                                          },
                                          "id": {
                                            "properties": {
                                              "id": {
                                                "type": "string"
                                              },
                                              "inst": {
                                                "type": "integer"
                                              },
                                              "saas": {
                                                "type": "integer"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "resolved": {
                                            "type": "boolean"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "1": {},
                                      "2": {
                                        "properties": {
                                          "displayName": {
                                            "type": "string"
                                          },
                                          "id": {
                                            "properties": {
                                              "id": {
                                                "type": "string"
                                              },
                                              "inst": {
                                                "type": "integer"
                                              },
                                              "saas": {
                                                "type": "integer"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "resolved": {
                                            "type": "boolean"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "eventRouting": {
                                    "properties": {
                                      "auditing": {
                                        "type": "boolean"
                                      },
                                      "dispersed": {
                                        "type": "boolean"
                                      },
                                      "lograbber": {
                                        "type": "boolean"
                                      },
                                      "scubaUnpacker": {
                                        "type": "boolean"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "eventType": {
                                    "type": "integer"
                                  },
                                  "eventTypeName": {
                                    "type": "string"
                                  },
                                  "eventTypeValue": {
                                    "type": "string"
                                  },
                                  "genericEventType": {
                                    "type": "string"
                                  },
                                  "instantiation": {
                                    "type": "integer"
                                  },
                                  "instantiationRaw": {
                                    "type": "integer"
                                  },
                                  "internals": {
                                    "properties": {
                                      "otherIPs": {
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "location": {
                                    "properties": {
                                      "anonymousProxy": {
                                        "type": "boolean"
                                      },
                                      "carrier": {
                                        "type": "string"
                                      },
                                      "category": {
                                        "type": "integer"
                                      },
                                      "categoryValue": {
                                        "type": "string"
                                      },
                                      "city": {
                                        "type": "string"
                                      },
                                      "countryCode": {
                                        "type": "string"
                                      },
                                      "ipTags": {
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "isSatelliteProvider": {
                                        "type": "boolean"
                                      },
                                      "latitude": {
                                        "type": "number"
                                      },
                                      "longitude": {
                                        "type": "number"
                                      },
                                      "organizationSearchable": {
                                        "type": "string"
                                      },
                                      "postalCode": {
                                        "type": "string"
                                      },
                                      "region": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "lograbberService": {
                                    "properties": {
                                      "categoryReasonForNotGedi": {
                                        "type": "string"
                                      },
                                      "o365EventGrabber": {
                                        "type": "boolean"
                                      },
                                      "valueReasonForNotGedi": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "mainInfo": {
                                    "properties": {
                                      "eventObjects": {
                                        "items": {
                                          "properties": {
                                            "governable": {
                                              "type": "boolean"
                                            },
                                            "id": {
                                              "type": "string"
                                            },
                                            "instanceId": {
                                              "type": "integer"
                                            },
                                            "link": {
                                              "type": "integer"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "objType": {
                                              "type": "integer"
                                            },
                                            "resolved": {
                                              "type": "boolean"
                                            },
                                            "role": {
                                              "type": "integer"
                                            },
                                            "saasId": {
                                              "type": "integer"
                                            },
                                            "serviceObjectType": {
                                              "type": "string"
                                            },
                                            "tags": {
                                              "type": "array"
                                            }
                                          },
                                          "required": [
                                            "objType",
                                            "role",
                                            "tags",
                                            "name",
                                            "id"
                                          ],
                                          "type": "object"
                                        },
                                        "type": "array"
                                      },
                                      "prettyOperationName": {
                                        "type": "string"
                                      },
                                      "rawOperationName": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "rawDataJson": {
                                    "properties": {
                                      "ClientIP": {
                                        "type": "string"
                                      },
                                      "CorrelationId": {
                                        "type": "string"
                                      },
                                      "CreationTime": {
                                        "type": "string"
                                      },
                                      "DoNotDistributeEvent": {
                                        "type": "boolean"
                                      },
                                      "EventSource": {
                                        "type": "string"
                                      },
                                      "HighPriorityMediaProcessing": {
                                        "type": "boolean"
                                      },
                                      "Id": {
                                        "type": "string"
                                      },
                                      "ItemType": {
                                        "type": "string"
                                      },
                                      "ListId": {
                                        "type": "string"
                                      },
                                      "ListItemUniqueId": {
                                        "type": "string"
                                      },
                                      "ObjectId": {
                                        "type": "string"
                                      },
                                      "Operation": {
                                        "type": "string"
                                      },
                                      "OrganizationId": {
                                        "type": "string"
                                      },
                                      "RecordType": {
                                        "type": "integer"
                                      },
                                      "Site": {
                                        "type": "string"
                                      },
                                      "SiteUrl": {
                                        "type": "string"
                                      },
                                      "SourceFileExtension": {
                                        "type": "string"
                                      },
                                      "SourceFileName": {
                                        "type": "string"
                                      },
                                      "SourceRelativeUrl": {
                                        "type": "string"
                                      },
                                      "UserAgent": {
                                        "type": "string"
                                      },
                                      "UserId": {
                                        "type": "string"
                                      },
                                      "UserKey": {
                                        "type": "string"
                                      },
                                      "UserType": {
                                        "type": "integer"
                                      },
                                      "Version": {
                                        "type": "integer"
                                      },
                                      "WebId": {
                                        "type": "string"
                                      },
                                      "Workload": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "resolvedActor": {
                                    "properties": {
                                      "governable": {
                                        "type": "boolean"
                                      },
                                      "id": {
                                        "type": "string"
                                      },
                                      "instanceId": {
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "objType": {
                                        "type": "string"
                                      },
                                      "resolved": {
                                        "type": "boolean"
                                      },
                                      "role": {
                                        "type": "string"
                                      },
                                      "saasId": {
                                        "type": "string"
                                      },
                                      "tags": {
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "resolvedActorAccount": {
                                    "properties": {
                                      "governable": {
                                        "type": "boolean"
                                      },
                                      "id": {
                                        "type": "string"
                                      },
                                      "instanceId": {
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "resolved": {
                                        "type": "boolean"
                                      },
                                      "role": {
                                        "type": "string"
                                      },
                                      "saasId": {
                                        "type": "string"
                                      },
                                      "tags": {
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "saasId": {
                                    "type": "integer"
                                  },
                                  "severity": {
                                    "type": "string"
                                  },
                                  "source": {
                                    "type": "integer"
                                  },
                                  "srcAppId": {
                                    "type": "integer"
                                  },
                                  "tags": {
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "tenantId": {
                                    "type": "integer"
                                  },
                                  "timestamp": {
                                    "type": "integer"
                                  },
                                  "timestampRaw": {
                                    "type": "integer"
                                  },
                                  "uid": {
                                    "type": "string"
                                  },
                                  "user": {
                                    "properties": {
                                      "userName": {
                                        "type": "string"
                                      },
                                      "userTags": {
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "userAgent": {
                                    "properties": {
                                      "browser": {
                                        "type": "string"
                                      },
                                      "deviceType": {
                                        "type": "string"
                                      },
                                      "family": {
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "nativeBrowser": {
                                        "type": "boolean"
                                      },
                                      "operatingSystem": {
                                        "properties": {
                                          "family": {
                                            "type": "string"
                                          },
                                          "name": {
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "os": {
                                        "type": "string"
                                      },
                                      "tags": {
                                        "items": {
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "type": {
                                        "type": "string"
                                      },
                                      "typeName": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "required": [
                                  "_id",
                                  "tenantId",
                                  "aadTenantId",
                                  "appId",
                                  "saasId",
                                  "timestamp",
                                  "timestampRaw",
                                  "instantiation",
                                  "instantiationRaw",
                                  "created",
                                  "createdRaw",
                                  "eventType",
                                  "eventTypeValue",
                                  "eventRouting",
                                  "device",
                                  "mainInfo",
                                  "confidenceLevel",
                                  "source",
                                  "lograbberService",
                                  "collected",
                                  "rawDataJson",
                                  "uid",
                                  "appName",
                                  "eventTypeName",
                                  "classifications",
                                  "entityData",
                                  "description_id",
                                  "description_metadata",
                                  "description",
                                  "genericEventType",
                                  "severity"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "hasNext": {
                              "type": "boolean"
                            },
                            "total": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "runAfter": {
                    "HTTP": [
                      "Succeeded"
                    ]
                  },
                  "type": "ParseJson"
                },
                "Set_variable": {
                  "inputs": {
                    "name": "HasNext",
                    "value": "@{body('Parse_JSON')?['body']?['hasNext']}"
                  },
                  "runAfter": {
                    "Increment_variable": [
                      "Succeeded"
                    ]
                  },
                  "type": "SetVariable"
                }
              },
              "expression": "@equals(variables('HasNext'), '')",
              "limit": {
                "count": 60,
                "timeout": "PT1H"
              },
              "runAfter": {
                "Initialize_variable_9": [
                  "Succeeded"
                ]
              },
              "type": "Until"
            },
            "Update_blob": {
              "inputs": {
                "body": "{\n    \"lastRun\": \"@{variables('RunTime')}\",\n    \"lastRunEpoch\": @{variables('EndTimeEpoch')}\n}",
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azureblob']['connectionId']"
                  }
                },
                "method": "put",
                "path": "/datasets/default/files/@{encodeURIComponent(encodeURIComponent('/mcasactivitylogicapp/lastrun-MCAS.json'))}"
              },
              "runAfter": {
                "Until_2": [
                  "Succeeded"
                ]
              },
              "type": "ApiConnection"
            }
          },
          "contentVersion": "1.0.0.0",
          "outputs": {},
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "Recurrence": {
              "recurrence": {
                "frequency": "Minute",
                "interval": 5
              },
              "type": "Recurrence"
            }
          }
        },
        "parameters": {
          "$connections": {
            "value": {
              "azureblob": {
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureBlobConnectionName'))]",
                "connectionName": "[variables('AzureBlobConnectionName')]",
                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azureblob')]"
              },
              "azureloganalyticsdatacollector": {
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureLogAnalyticsDataCollectorConnectionName'))]",
                "connectionName": "[variables('AzureLogAnalyticsDataCollectorConnectionName')]",
                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azureloganalyticsdatacollector')]"
              },
              "keyvault": {
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('KeyVaultConnectionName'))]",
                "connectionName": "[variables('KeyVaultConnectionName')]",
                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/keyvault')]",
                "connectionProperties": {
                  "authentication": {
                    "type": "ManagedServiceIdentity"
                  }
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/accessPolicies",
      "name": "[concat(variables('KeyVaultName'), '/add')]",
      "apiVersion": "2019-09-01",
      "dependsOn": [
        "[resourceId('Microsoft.Logic/workflows', parameters('MCASActivityPlaybookName'))]"
      ],
      "properties": {
        "accessPolicies": [
          {
            "tenantId": "[subscription().tenantId]",
            "objectId": "[reference(resourceId('Microsoft.Logic/workflows', parameters('MCASActivityPlaybookName')), '2017-07-01', 'full').identity.principalId]",
            "permissions": {
              "secrets": [
                "Get",
                "List"
              ]
            }
          }
        ]
      }
    }
  ]
}

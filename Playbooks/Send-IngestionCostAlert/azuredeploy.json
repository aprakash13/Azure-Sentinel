{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
    "parameters": {
    "PlaybookName": {
      "defaultValue": "IngestionCostAlert",
      "type": "String"
    },
    "SentinelWSName": {
      "defaultValue": "az-sentinel-ws-name",
      "type": "string"
    },
    "SentinelSubID": {
      "defaultValue": "00000000-0000-0000-0000-000000000000",
      "type": "string"
    },
    "SentinelWSResourceGroup": {
      "defaultValue": "az-sentinel-rg",
      "type": "string"
    },
    "MailList": {
      "defaultValue": "<user1>@<domain>;<user2>@<domain>;...",
      "type": "string"
    },
    "UserName": {
      "defaultValue": "<username>@<domain>",
      "type": "string"
    }
  },
  "variables": {
    "o365ConnectionName": "[concat('o365-', parameters('PlaybookName'))]",
    "azuremonitorlogsConnectionName": "[concat('azuremon-', parameters('PlaybookName'))]",
    "TeamsConnectionName": "[concat('teams-', parameters('PlaybookName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[variables('o365ConnectionName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "displayName": "[parameters('UserName')]",
        "customParameterValues": {},
        "api": {
          "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/office365')]"
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[variables('azuremonitorlogsConnectionName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "displayName": "[parameters('UserName')]",
        "customParameterValues": {},
        "api": {
          "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuremonitorlogs')]"
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[variables('TeamsConnectionName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "displayName": "[parameters('UserName')]",
        "customParameterValues": {},
        "api": {
          "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/teams')]"
        }
      }
    },
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2017-07-01",
      "name": "[parameters('PlaybookName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections',variables('o365ConnectionName'))]",
        "[resourceId('Microsoft.Web/connections',variables('azuremonitorlogsConnectionName'))]",
        "[resourceId('Microsoft.Web/connections', variables('TeamsConnectionName'))]"
      ],
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "Recurrence": {
              "recurrence": {
                "frequency": "Hour",
                "interval": 6,
                "timeZone": "E. Africa Standard Time"
              },
              "type": "Recurrence"
            }
          },
          "actions": {
            "For_each": {
              "foreach": "@body('Run_query_and_list_results')?['value']",
              "actions": {
                "Condition": {
                  "actions": {
                    "Post_a_message_in_a_Teams_channel": {
                      "runAfter": {
                        "Send_an_email_": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "body": {
                          "messageBody": "The daily cost budget of @{variables('total_funding')} has been exceeded !",
                          "messageTitle": "Daily Budget Exceeded",
                          "recipient": {
                            "channelId": "19:60c34dc43b574878a588e9dcd5e425dc@thread.tacv2"
                          }
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['teams']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/flowbot/actions/notification/recipienttypes/channel",
                        "queries": {
                          "groupId": "100fb594-a54a-42b2-b4c2-2ffaaae3940a"
                        }
                      }
                    },
                    "Send_an_email_": {
                      "runAfter": {},
                      "type": "ApiConnection",
                      "inputs": {
                        "body": {
                          "Body": "<p>The daily cost budget of @{variables('total_funding')} has been exceeded !</p>",
                          "Importance": "High",
                          "Subject": "Daily Budget Exceeded",
                          "To": "MailList"
                        },
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['office365']['connectionId']"
                          }
                        },
                        "method": "post",
                        "path": "/v2/Mail"
                      }
                    }
                  },
                  "runAfter": {},
                  "expression": {
                    "and": [
                      {
                        "greater": [
                          "@items('For_each')?['AggregatedValue']",
                          "@variables('Threshold_per_day')"
                        ]
                      }
                    ]
                  },
                  "type": "If"
                }
              },
              "runAfter": {
                "Run_query_and_list_results": [
                  "Succeeded"
                ]
              },
              "type": "Foreach"
            },
            "How_many_days": {
              "runAfter": {
                "Price_Per_GB": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "how_many_days",
                    "type": "integer",
                    "value": 30
                  }
                ]
              }
            },
            "Price_Per_GB": {
              "runAfter": {},
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "price_per_GB",
                    "type": "integer",
                    "value": 4
                  }
                ]
              }
            },
            "Run_query_and_list_results": {
              "runAfter": {
                "Threshold_per_day": [
                  "Succeeded"
                ]
              },
              "type": "ApiConnection",
              "inputs": {
                "body": "let price_per_GB = @{variables('price_per_GB')}  ;\nlet how_many_days = @{variables('how_many_days')}   ;\nlet total_funding = @{variables('total_funding')} ;\nlet threshold_per_day = toreal(@{variables('total_funding')}) / toreal(@{variables('how_many_days')});\nUsage\n| where TimeGenerated > startofday(ago(5d))\n| where IsBillable == true\n| summarize AggregatedValue= sum(Quantity) * price_per_GB / 1000 by bin(TimeGenerated, 1d)\n| where AggregatedValue > threshold_per_day",
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                  }
                },
                "method": "post",
                "path": "/queryData",
                "queries": {
                  "resourcegroups": "[parameters('SentinelWSResourceGroup')]",
                  "resourcename": "[parameters('SentinelWSName')]",
                  "resourcetype": "Log Analytics Workspace",
                  "subscriptions": "[parameters('SentinelSubID')]",
                  "timerange": "Set in query"
                }
              }
            },
            "Threshold_per_day": {
              "runAfter": {
                "Total_funding": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "Threshold_per_day",
                    "type": "integer",
                    "value": 10
                  }
                ]
              }
            },
            "Total_funding": {
              "runAfter": {
                "How_many_days": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "total_funding",
                    "type": "integer",
                    "value": 300
                  }
                ]
              }
            }
          },
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "azuremonitorlogs": {
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('azuremonitorlogsConnectionName'))]",
                "connectionName": "[variables('azuremonitorlogsConnectionName')]",
                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuremonitorlogs')]"
              },
              "teams": {
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('TeamsConnectionName'))]",
                "connectionName": "[variables('TeamsConnectionName')]",
                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/teams')]"
              },
              "office365": {
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('o365ConnectionName'))]",
                "connectionName": "[variables('o365ConnectionName')]",
                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/office365')]"
              }
            }
          }
        }
      }
    }
  ]
}
{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata":{
        "comments": "This playbook will open Service Now incident when new incident open in sentinel.",
        "author": "Yaniv Shasha"
    },
    "parameters": {
        "PlaybookName": {
            "defaultValue": "Open-SNOW-Ticket",
            "type": "String"
        },
        "UserName": {
            "defaultValue": "<username>@<domain>",
            "type": "string"
        }
    },
    "variables": {
        "AzureSentinelConnectionName": "[concat('azuresentinel-', parameters('PlaybookName'))]",
        "SNOWConnectionName": "[concat('snow-', parameters('PlaybookName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('AzureSentinelConnectionName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "[parameters('UserName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('SNOWConnectionName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "[parameters('UserName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/service-now')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('PlaybookName')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "LogicAppsCategory": "security"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('SNOWConnectionName'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                     "triggers": {
                        "When_a_response_to_an_Azure_Sentinel_alert_is_triggered": {
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "callback_url": "@{listCallbackUrl()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "path": "/subscribe"
                            }
                        }
                    },
                    "actions": {
                        "Alert_-_Get_incident": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/Cases/@{encodeURIComponent(triggerBody()?['SystemAlertId'])}/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}"
                            }
                        },
                        "Create_Record": {
                            "runAfter": {
                                "WorkspaceName": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "comments": "https://portal.azure.com/#asset/Microsoft_Azure_Security_Insights/Incident/subscriptions/@{triggerBody()?['WorkspaceSubscriptionId']}/resourcegroups/@{triggerBody()?['WorkspaceResourceGroup']}/providers/Microsoft.OperationalInsights/workspaces/@{variables('WorkspaceName')}/providers/Microsoft.SecurityInsights/Incidents/@{body('Parse_JSON')?['name']}",
                                    "number": "@{body('Alert_-_Get_incident')?['name']}",
                                    "severity": "@body('Alert_-_Get_incident')?['properties']?['Severity']",
                                    "short_description": "@body('Alert_-_Get_incident')?['properties']?['Description']"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['service-now']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/api/now/v2/table/@{encodeURIComponent('incident')}",
                                "queries": {
                                    "sysparm_display_value": false,
                                    "sysparm_exclude_reference_link": true
                                }
                            }
                        },
                        "Parse_JSON": {
                            "runAfter": {
                                "Alert_-_Get_incident": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@body('Alert_-_Get_incident')",
                                "schema": {
                                    "properties": {
                                        "etag": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "kind": {},
                                        "name": {
                                            "type": "string"
                                        },
                                        "properties": {
                                            "properties": {
                                                "AssignedTo": {},
                                                "CaseNumber": {
                                                    "type": "integer"
                                                },
                                                "CloseReason": {},
                                                "ClosedReasonText": {},
                                                "CreatedTimeUtc": {
                                                    "type": "string"
                                                },
                                                "Description": {
                                                    "type": "string"
                                                },
                                                "EndTimeUtc": {
                                                    "type": "string"
                                                },
                                                "FirstAlertTimeGenerated": {
                                                    "type": "string"
                                                },
                                                "Labels": {
                                                    "type": "array"
                                                },
                                                "LastAlertTimeGenerated": {
                                                    "type": "string"
                                                },
                                                "LastUpdatedTimeUtc": {
                                                    "type": "string"
                                                },
                                                "Metrics": {
                                                    "properties": {
                                                        "SecurityAlert": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "RelatedAlertIds": {
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "Severity": {
                                                    "type": "string"
                                                },
                                                "StartTimeUtc": {
                                                    "type": "string"
                                                },
                                                "Status": {
                                                    "type": "string"
                                                },
                                                "Title": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "tags": {},
                                        "type": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "WorkspaceName": {
                            "runAfter": {
                                "Parse_JSON": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "WorkspaceName",
                                        "type": "string",
                                        "value": "@{concat(split(body('Parse_JSON')?['id'], '/')[8])}"
                                    }
                                ]
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                       "value": {
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                                "connectionName": "[variables('AzureSentinelConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                            },
                            "service-now": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('SNOWConnectionName'))]",
                                "connectionName": "[variables('SNOWConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/service-now')]"
                            }
                        }
                    }
                }
            }
        }
    ]
}
{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "PlaybookName": {
            "defaultValue": "<PlaybookName>",
            "type": "string"
        },
        "UserName": {
            "defaultValue": "<username>@<domain>",
            "type": "string"
        },
        "ClientID": {
            "defaultValue": "****REPLACE WITH CLIENT ID ****",
            "type": "string"
        },
        "TenantID": {
            "defaultValue": "****REPLACE WITH TENANT ID ****",
            "type": "string"
        },
        "DeHashed-Username": {
            "defaultValue": "****REPLACE WITH DEHASHED USERNAME ****",
            "type": "string"
        },
        "KeyVaultClientCredentialsURL-DeHashed-Password": {
            "defaultValue": "****REPLACE WITH KEY VAULT URI FOR DEHASHED PASSWORD ****",
            "type": "string"
        },
        "KeyVaultClientCredentialsURL-GraphAPI": {
            "defaultValue": "****REPLACE WITH KEY VAULT URI FOR GRAPH API KEY ****",
            "type": "string"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('PlaybookName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "ClientID": {
                            "defaultValue": "[parameters('ClientID')]",
                            "type": "String"
                        },
                        "DeHashed-Username": {
                            "defaultValue": "[parameters('DeHashed-Username')]",
                            "type": "String"
                        },
                        "KeyVaultClientCredentialsURL-DeHashed-Password": {
                            "defaultValue": "[parameters('KeyVaultClientCredentialsURL-DeHashed-Password')]",
                            "type": "String"
                        },
                        "KeyVaultClientCredentialsURL-GraphAPI": {
                            "defaultValue": "[parameters('KeyVaultClientCredentialsURL-GraphAPI')]",
                            "type": "String"
                        },
                        "TenantId": {
                            "defaultValue": "[parameters('TenantID')]",
                            "type": "String"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {
                                    "properties": {
                                        "emailAddress": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Current_time": {
                            "runAfter": {},
                            "type": "Expression",
                            "kind": "CurrentTime",
                            "inputs": {}
                        },
                        "Extract_Password_List": {
                            "runAfter": {
                                "Parse_Password_Settings": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Query",
                            "inputs": {
                                "from": "@body('Parse_Password_Settings')?['values']",
                                "where": "@equals(item()?['name'], 'BannedPasswordList')"
                            }
                        },
                        "For_each_E-Mail_Address": {
                            "foreach": "@body('Extract_Password_List')",
                            "actions": {
                                "Get_Passwords": {
                                    "runAfter": {},
                                    "type": "Http",
                                    "inputs": {
                                        "authentication": {
                                            "password": "@body('Parse_Response_from_Key_Vault_-_Dehashed_Password')?['value']",
                                            "type": "Basic",
                                            "username": "@parameters('DeHashed-Username')"
                                        },
                                        "headers": {
                                            "Accept": "application/json"
                                        },
                                        "method": "GET",
                                        "uri": "https://api.dehashed.com/search?query=@{variables('emailAddress')}"
                                    }
                                },
                                "If_Passwords_Found_Greater_Then_0_-_Update_Banned_Password_List": {
                                    "actions": {
                                        "Compose_Password_Array": {
                                            "runAfter": {
                                                "For_Each_Result": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Compose",
                                            "inputs": "@intersection(variables('dehashedPasswordArray'),variables('dehashedPasswordArray'))"
                                        },
                                        "For_Each_Result": {
                                            "foreach": "@body('Parse_Dehashed_Data')?['entries']",
                                            "actions": {
                                                "Condition": {
                                                    "actions": {
                                                        "Append_to_array_variable": {
                                                            "runAfter": {},
                                                            "type": "AppendToArrayVariable",
                                                            "inputs": {
                                                                "name": "dehashedPasswordArray",
                                                                "value": "@items('For_Each_Result')?['password']"
                                                            }
                                                        }
                                                    },
                                                    "runAfter": {
                                                        "Set_Password": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "not": {
                                                                    "equals": [
                                                                        "@items('For_Each_Result')?['password']",
                                                                        "@null"
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "greaterOrEquals": [
                                                                    "@length(variables('password'))",
                                                                    4
                                                                ]
                                                            },
                                                            {
                                                                "lessOrEquals": [
                                                                    "@length(variables('password'))",
                                                                    16
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "type": "If"
                                                },
                                                "Set_Password": {
                                                    "runAfter": {},
                                                    "type": "SetVariable",
                                                    "inputs": {
                                                        "name": "password",
                                                        "value": "@{items('For_Each_Result')?['password']}"
                                                    }
                                                }
                                            },
                                            "runAfter": {
                                                "Parse_Dehashed_Data": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Foreach"
                                        },
                                        "For_Each_Unique_Password": {
                                            "foreach": "@outputs('Compose_Password_Array')",
                                            "actions": {
                                                "Check_for_Null_password": {
                                                    "actions": {
                                                        "Append_to_string_variable": {
                                                            "runAfter": {},
                                                            "type": "AppendToStringVariable",
                                                            "inputs": {
                                                                "name": "bannedPasswordList",
                                                                "value": "@{items('For_Each_Unique_Password')}\t"
                                                            }
                                                        }
                                                    },
                                                    "runAfter": {},
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "not": {
                                                                    "equals": [
                                                                        "@items('For_Each_Unique_Password')",
                                                                        ""
                                                                    ]
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "type": "If"
                                                }
                                            },
                                            "runAfter": {
                                                "Set_Bad_Passwords_String": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Foreach"
                                        },
                                        "Join_Bad_Passwords_String": {
                                            "runAfter": {
                                                "Compose_Password_Array": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Join",
                                            "inputs": {
                                                "from": "@outputs('Compose_Password_Array')",
                                                "joinWith": ":"
                                            }
                                        },
                                        "Parse_Dehashed_Data": {
                                            "runAfter": {},
                                            "type": "ParseJson",
                                            "inputs": {
                                                "content": "@body('Get_Passwords')",
                                                "schema": {
                                                    "properties": {
                                                        "balance": {
                                                            "type": "integer"
                                                        },
                                                        "entries": {
                                                            "items": {
                                                                "properties": {
                                                                    "address": {},
                                                                    "email": {},
                                                                    "hashed_password": {},
                                                                    "id": {},
                                                                    "ip_address": {},
                                                                    "name": {},
                                                                    "obtained_from": {},
                                                                    "password": {},
                                                                    "phone": {},
                                                                    "username": {},
                                                                    "vin": {}
                                                                },
                                                                "required": [],
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "success": {
                                                            "type": "boolean"
                                                        },
                                                        "took": {
                                                            "type": "string"
                                                        },
                                                        "total": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "Set_Bad_Passwords_String": {
                                            "runAfter": {
                                                "Join_Bad_Passwords_String": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "foundPasswords",
                                                "value": "@body('Join_Bad_Passwords_String')"
                                            }
                                        },
                                        "Update_Password_Settings": {
                                            "runAfter": {
                                                "For_Each_Unique_Password": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Http",
                                            "inputs": {
                                                "authentication": {
                                                    "audience": "https://graph.microsoft.com",
                                                    "clientId": "@parameters('ClientID')",
                                                    "secret": "@body('Parse_Response_from_Key_Vault_-_Graph_API')?['value']",
                                                    "tenant": "@parameters('TenantId')",
                                                    "type": "ActiveDirectoryOAuth"
                                                },
                                                "body": {
                                                    "templateId": "5cf42378-d67d-4f36-ba46-e8b86229381d",
                                                    "values": [
                                                        {
                                                            "name": "BannedPasswordCheckOnPremisesMode",
                                                            "value": "@{variables('BannedPasswordCheckOnPremisesMode')}"
                                                        },
                                                        {
                                                            "name": "EnableBannedPasswordCheckOnPremises",
                                                            "value": "@{variables('EnableBannedPasswordCheckOnPremises')}"
                                                        },
                                                        {
                                                            "name": "EnableBannedPasswordCheck",
                                                            "value": "@{variables('EnableBannedPasswordCheck')}"
                                                        },
                                                        {
                                                            "name": "LockoutDurationInSeconds",
                                                            "value": "@{variables('LockoutDurationInSeconds')}"
                                                        },
                                                        {
                                                            "name": "LockoutThreshold",
                                                            "value": "@{variables('LockoutThreshold')}"
                                                        },
                                                        {
                                                            "name": "BannedPasswordList",
                                                            "value": "@{substring(variables('bannedPasswordList'),0,sub(length(variables('bannedPasswordList')),1))}"
                                                        }
                                                    ]
                                                },
                                                "method": "PATCH",
                                                "uri": "https://graph.microsoft.com/beta/settings//5bfc75a9-c4cb-42d5-9abc-56d458ab560d"
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Set_Number_of_Passwords_found": [
                                            "Succeeded"
                                        ]
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "greater": [
                                                    "@variables('numPasswords')",
                                                    0
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Set_Number_of_Passwords_found": {
                                    "runAfter": {
                                        "Get_Passwords": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "numPasswords",
                                        "value": "@body('Get_Passwords')['total']"
                                    }
                                }
                            },
                            "runAfter": {
                                "Initialize_Passwords": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Get_Client_Secret_from_Vault_-_Dehashed": {
                            "runAfter": {
                                "Parse_Response_from_Key_Vault_-_Graph_API": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "authentication": {
                                    "audience": "https://vault.azure.net",
                                    "identity": "Managed Identity",
                                    "type": "ManagedServiceIdentity"
                                },
                                "method": "GET",
                                "queries": {
                                    "api-version": "2016-10-01"
                                },
                                "uri": "@parameters('KeyVaultClientCredentialsURL-DeHashed-Password')"
                            }
                        },
                        "Get_Client_Secret_from_Vault_-_Graph_API": {
                            "runAfter": {
                                "Current_time": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "authentication": {
                                    "audience": "https://vault.azure.net",
                                    "identity": "Managed Identity",
                                    "type": "ManagedServiceIdentity"
                                },
                                "method": "GET",
                                "queries": {
                                    "api-version": "2016-10-01"
                                },
                                "uri": "@parameters('KeyVaultClientCredentialsURL-GraphAPI')"
                            }
                        },
                        "Get_Password_Settings": {
                            "runAfter": {
                                "Parse_Response_from_Key_Vault_-_Dehashed_Password": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "authentication": {
                                    "audience": "https://graph.microsoft.com",
                                    "clientId": "@parameters('ClientID')",
                                    "secret": "@body('Parse_Response_from_Key_Vault_-_Graph_API')?['value']",
                                    "tenant": "@parameters('TenantId')",
                                    "type": "ActiveDirectoryOAuth"
                                },
                                "method": "GET",
                                "uri": "https://graph.microsoft.com/beta/settings/5bfc75a9-c4cb-42d5-9abc-56d458ab560d"
                            }
                        },
                        "If_Passwords_Found": {
                            "actions": {
                                "Passwords_Found": {
                                    "runAfter": {},
                                    "type": "Response",
                                    "kind": "Http",
                                    "inputs": {
                                        "body": "The following compromised passwords @{variables('foundPasswords')} were found for @{variables('emailAddress')}. These passwords have been succesfully added to the Azure AD Banned Password list.",
                                        "statusCode": 200
                                    }
                                }
                            },
                            "runAfter": {
                                "For_each_E-Mail_Address": [
                                    "Succeeded"
                                ]
                            },
                            "else": {
                                "actions": {
                                    "No_Passwords_Found": {
                                        "runAfter": {},
                                        "type": "Response",
                                        "kind": "Http",
                                        "inputs": {
                                            "body": "No passwords were found for @{variables('emailAddress')}.  The Azure AD Banned Password list remains unchanged.",
                                            "statusCode": 200
                                        }
                                    }
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "greater": [
                                            "@variables('numPasswords')",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Initialize_BannedPasswordCheckOnPremisesMode": {
                            "runAfter": {
                                "Initialize_deHashedPasswordArray": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "BannedPasswordCheckOnPremisesMode",
                                        "type": "string",
                                        "value": "@{body('Parse_Password_Settings')['values'][0]['value']}"
                                    }
                                ]
                            }
                        },
                        "Initialize_Banned_Password_List": {
                            "runAfter": {
                                "Initialize_LockoutThreshold": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "bannedPasswordList",
                                        "type": "string",
                                        "value": "@{body('Parse_Password_Settings')['values'][5]['value']}\t"
                                    }
                                ]
                            }
                        },
                        "Initialize_EnableBannedPasswordCheck": {
                            "runAfter": {
                                "Initialize_EnableBannedPasswordCheckOnPremises": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "EnableBannedPasswordCheck",
                                        "type": "string",
                                        "value": "@{body('Parse_Password_Settings')['values'][2]['value']}"
                                    }
                                ]
                            }
                        },
                        "Initialize_EnableBannedPasswordCheckOnPremises": {
                            "runAfter": {
                                "Initialize_BannedPasswordCheckOnPremisesMode": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "EnableBannedPasswordCheckOnPremises",
                                        "type": "string",
                                        "value": "@body('Parse_Password_Settings')['values'][1]['value']"
                                    }
                                ]
                            }
                        },
                        "Initialize_Found_Password": {
                            "runAfter": {
                                "Initialize_Banned_Password_List": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "foundPasswords",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_LockoutDurationInSeconds": {
                            "runAfter": {
                                "Initialize_EnableBannedPasswordCheck": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "LockoutDurationInSeconds",
                                        "type": "string",
                                        "value": "@body('Parse_Password_Settings')['values'][3]['value']"
                                    }
                                ]
                            }
                        },
                        "Initialize_LockoutThreshold": {
                            "runAfter": {
                                "Initialize_LockoutDurationInSeconds": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "LockoutThreshold",
                                        "type": "string",
                                        "value": "@body('Parse_Password_Settings')['values'][4]['value']"
                                    }
                                ]
                            }
                        },
                        "Initialize_Number_of_Passwords": {
                            "runAfter": {
                                "Initialize_Found_Password": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "numPasswords",
                                        "type": "integer"
                                    }
                                ]
                            }
                        },
                        "Initialize_Passwords": {
                            "runAfter": {
                                "Initialize_Number_of_Passwords": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "password",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_deHashedPasswordArray": {
                            "runAfter": {
                                "Initialize_emailAddress": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "dehashedPasswordArray",
                                        "type": "array"
                                    }
                                ]
                            }
                        },
                        "Initialize_emailAddress": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "emailAddress",
                                        "type": "string",
                                        "value": "@triggerBody()?['emailAddress']"
                                    }
                                ]
                            },
                            "runAfter": {
                                "Extract_Password_List": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Parse_Password_Settings": {
                            "runAfter": {
                                "Get_Password_Settings": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@body('Get_Password_Settings')",
                                "schema": {
                                    "properties": {
                                        "@@odata.context": {
                                            "type": "string"
                                        },
                                        "displayName": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "templateId": {
                                            "type": "string"
                                        },
                                        "values": {
                                            "items": {
                                                "properties": {
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "value": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "name",
                                                    "value"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "Parse_Response_from_Key_Vault_-_Dehashed_Password": {
                            "runAfter": {
                                "Get_Client_Secret_from_Vault_-_Dehashed": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@body('Get_Client_Secret_from_Vault_-_Dehashed')",
                                "schema": {
                                    "properties": {
                                        "attributes": {
                                            "properties": {
                                                "created": {
                                                    "type": "integer"
                                                },
                                                "enabled": {
                                                    "type": "boolean"
                                                },
                                                "recoveryLevel": {
                                                    "type": "string"
                                                },
                                                "updated": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "value": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "Parse_Response_from_Key_Vault_-_Graph_API": {
                            "runAfter": {
                                "Get_Client_Secret_from_Vault_-_Graph_API": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@body('Get_Client_Secret_from_Vault_-_Graph_API')",
                                "schema": {
                                    "properties": {
                                        "attributes": {
                                            "properties": {
                                                "created": {
                                                    "type": "integer"
                                                },
                                                "enabled": {
                                                    "type": "boolean"
                                                },
                                                "recoveryLevel": {
                                                    "type": "string"
                                                },
                                                "updated": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "value": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {}
            }
        }
    ]
}

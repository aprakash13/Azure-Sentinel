 {
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata":{
        "comments": "This playbook uses Watchlist to chanage the incidents severity if users is part of the VIP user watchlist and add his name to the incident title.",
        "author": "Yaniv Shasha"
    },
    "parameters": {
        "PlaybookName": {
            "defaultValue": "Watchlist-ChangeIncidentSeverityandTitleIFUserVIP",
            "type": "string"
        },
        "UserName": {
            "defaultValue": "<username>@<domain>",
            "type": "string"
        },
        "AzureSentinelWorkspaceName": {
            "defaultValue": "The Azure Sentinel workspace name",
            "type": "string"
        },
        "AzureSentinelResourceGroup": {
            "defaultValue": "The resource group where the Sentinel workspace is under",
            "type": "string"
        },
        "WatchlistName": {
            "defaultValue": "Name of watchlist that stores safe IP addresses",
            "type": "string"
        }
    },
    "variables": {
        "AzureSentinelConnectionName": "[concat('azuresentinel-', parameters('PlaybookName'))]",
        "AzureMonitorLogsConnectionName": "[concat('azuremonitorlogs-', parameters('PlaybookName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('AzureSentinelConnectionName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "[parameters('UserName')]",
                "customParameterValues": {
                },
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('AzureMonitorLogsConnectionName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "[parameters('UserName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuremonitorlogs')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('PlaybookName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",            
                "[resourceId('Microsoft.Web/connections', variables('AzureMonitorLogsConnectionName'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_a_response_to_an_Azure_Sentinel_alert_is_triggered": {
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "callback_url": "@{listCallbackUrl()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "path": "/subscribe"
                            }
                        }
                    },
                    "actions": {
                        "Alert_-_Get_incident": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/Cases/@{encodeURIComponent(triggerBody()?['SystemAlertId'])}/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}"
                            }
                        },
                        "Entities_-_Get_Accounts": {
                            "runAfter": {
                                "Initialize_variable_-_Watchlist_name": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@triggerBody()?['Entities']",
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/entities/account"
                            }
                        },
                        "For_each": {
                            "foreach": "@body('Entities_-_Get_Accounts')?['Accounts']",
                            "actions": {
                                "Condition_-_if_User_Is_VIP_": {
                                    "actions": {
                                        "Change_incident_severity": {
                                            "runAfter": {},
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                    }
                                                },
                                                "method": "put",
                                                "path": "/Case/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/@{encodeURIComponent('Incident')}/@{encodeURIComponent(body('Alert_-_Get_incident')?['properties']?['CaseNumber'])}/Severity/@{encodeURIComponent('Critical')}"
                                            }
                                        },
                                        "Change_incident_title_(V2)": {
                                            "runAfter": {
                                                "Change_incident_severity": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": {
                                                    "Value": "@{body('Alert_-_Get_incident')?['properties']?['Title']}VIP USER!!! @{items('For_each')?['Name']}"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                    }
                                                },
                                                "method": "put",
                                                "path": "/Case/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/@{encodeURIComponent('Incident')}/@{encodeURIComponent(body('Alert_-_Get_incident')?['properties']?['CaseNumber'])}/Title"
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Run_query_and_list_results": [
                                            "Succeeded"
                                        ]
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "greater": [
                                                    "@length(body('Run_query_and_list_results')?['value'])",
                                                    0
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If",
                                    "description": "This condition returns true if IP was found in watchlist."
                                },
                                "Run_query_and_list_results": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": "_GetWatchlist(\"@{variables('WatchlistName')}\") \n| where Name contains \"@{items('For_each')?['Name']}\"",
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/queryData",
                                        "queries": {
                                            "resourcegroups": "@variables('ResourceGroupName')",
                                            "resourcename": "@variables('WorkspaceName')",
                                            "resourcetype": "Log Analytics Workspace",
                                            "subscriptions": "@variables('subscriptionid')",
                                            "timerange": "Last 12 hours"
                                        }
                                    },
                                    "description": "Check if user is in VIP list"
                                }
                            },
                            "runAfter": {
                                "Entities_-_Get_Accounts": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Initialize_variable_-_Resource_Group": {
                            "runAfter": {
                                "Initialize_variable_-_Workspace_Name": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "ResourceGroupName",
                                        "type": "string",
                                        "value": "sentinel-yanivsh"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_-_Subscription_ID": {
                            "runAfter": {
                                "Initialize_variable_-_Resource_Group": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "subscriptionid",
                                        "type": "string",
                                        "value": "[subscription().subscriptionId]"                                        
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_-_Watchlist_name": {
                            "runAfter": {
                                "Initialize_variable_-_Subscription_ID": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "WatchlistName",
                                        "type": "string",
                                        "value": "[parameters('WatchlistName')]"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_-_Workspace_Name": {
                            "runAfter": {
                                "Alert_-_Get_incident": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "WorkspaceName",
                                        "type": "string",
                                        "value": "[parameters('AzureSentinelWorkspaceName')]"
                                    }
                                ]
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                                "connectionName": "[variables('AzureSentinelConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                            },
                            "azuremonitorlogs": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureMonitorLogsConnectionName'))]",
                                "connectionName": "[variables('AzureMonitorLogsConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuremonitorlogs')]"
                            }
                        }
                    }
                }
            }
        }
    ]
}
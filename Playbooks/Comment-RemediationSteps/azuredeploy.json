{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "PlaybookName": {
            "defaultValue": "Comment_RemediationSteps",
            "type": "String"
        },
        "UserName": {
            "defaultValue": "<username>@<domain>",
            "type": "string"
        }
    },
    "variables": {
	"AzureSentinelConnectionName": "[concat('azuresentinel-', parameters('PlaybookName'))]",
        "AzureMonitorLogsConnectionName": "[concat('azuremonitorlogs-', parameters('PlaybookName'))]"
	},
    "resources": [
{
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('AzureSentinelConnectionName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "[parameters('UserName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('AzureMonitorLogsConnectionName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "[parameters('UserName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuremonitorlogs')]"
                }
            }
        },        
	{
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('PlaybookName')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "LogicAppsCategory": "security"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
		"[resourceId('Microsoft.Web/connections', variables('AzureMonitorLogsConnectionName'))]"
            ],
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_a_response_to_an_Azure_Sentinel_alert_is_triggered": {
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "callback_url": "@{listCallbackUrl()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "path": "/subscribe"
                            },
                            "description": "Logic app triggered manually or by being attached to an ASC (Azure Defender) or Microsoft Defender for Endpoint Analytic Rule. Goal of this Logic app is to provide an analyst with the remediation steps to respond to an incident."
                        }
                    },
                    "actions": {
                        "Alert_-_Get_incident": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/Incidents/subscriptions/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/workspaces/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/alerts/@{encodeURIComponent(triggerBody()?['SystemAlertId'])}"
                            },
                            "description": "Get incident details needed to pull in remediation steps and post comment to the incident"
                        },
                        "Condition": {
                            "actions": {
                                "For_each": {
                                    "foreach": "@body('Parse_JSON')",
                                    "actions": {
                                        "Condition_2": {
                                            "actions": {
                                                "Add_comment_to_incident_(V3)": {
                                                    "runAfter": {},
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "body": {
                                                            "incidentArmId": "@body('Alert_-_Get_incident')?['id']",
                                                            "message": "<p>Recommended Remediation Steps:<br>\n@{replace(replace(replace(replace(items('For_each')['RemediationSteps'], '[',''), ']', ''), '\"', ''), '.,', '.')}</p>"
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "path": "/Incidents/Comment"
                                                    },
                                                    "description": "Post remediation steps as a comment on the related incident. Remediation steps has been reformatted to be string friendly with programmatic JSON characters removed."
                                                }
                                            },
                                            "runAfter": {},
                                            "else": {
                                                "actions": {
                                                    "Condition_3": {
                                                        "actions": {
                                                            "Add_comment_to_incident_(V3)_2": {
                                                                "runAfter": {},
                                                                "type": "ApiConnection",
                                                                "inputs": {
                                                                    "body": {
                                                                        "incidentArmId": "@body('Alert_-_Get_incident')?['id']",
                                                                        "message": "<p>Recommended Remediation Steps:<br>\n@{\r\nreplace(replace(replace(replace(replace(replace(items('For_each')['RemediationSteps'], '{', ''),'}',''),'\"',''), '\\r\\n', '\r\n'),'[', ''),']', '')}<br>\n</p>"
                                                                    },
                                                                    "host": {
                                                                        "connection": {
                                                                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                                        }
                                                                    },
                                                                    "method": "post",
                                                                    "path": "/Incidents/Comment"
                                                                },
                                                                "description": "Post remediation steps as a comment on the related incident. Remediation steps has been reformatted to be string friendly with programmatic JSON characters removed."
                                                            }
                                                        },
                                                        "runAfter": {},
                                                        "expression": {
                                                            "and": [
                                                                {
                                                                    "equals": [
                                                                        "@items('For_each')['ProviderName']",
                                                                        "Azure Security Center"
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        "type": "If",
                                                        "description": "Determine whether alert is for ASC (Azure Defender) or not"
                                                    }
                                                }
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "equals": [
                                                            "@items('For_each')['ProviderName']",
                                                            "MDATP"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": "If",
                                            "description": "Determine whether alert is for Microsoft Defender for Endpoint or not"
                                        }
                                    },
                                    "runAfter": {
                                        "Parse_JSON": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Foreach"
                                },
                                "Parse_JSON": {
                                    "runAfter": {
                                        "Run_query_and_list_results": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@body('Run_query_and_list_results')?['value']",
                                        "schema": {
                                            "items": {
                                                "properties": {
                                                    "AlertLink": {
                                                        "type": "string"
                                                    },
                                                    "AlertName": {
                                                        "type": "string"
                                                    },
                                                    "AlertSeverity": {
                                                        "type": "string"
                                                    },
                                                    "AlertType": {
                                                        "type": "string"
                                                    },
                                                    "CompromisedEntity": {
                                                        "type": "string"
                                                    },
                                                    "ConfidenceLevel": {
                                                        "type": "string"
                                                    },
                                                    "ConfidenceScore": {},
                                                    "Description": {
                                                        "type": "string"
                                                    },
                                                    "DisplayName": {
                                                        "type": "string"
                                                    },
                                                    "EndTime": {
                                                        "type": "string"
                                                    },
                                                    "Entities": {
                                                        "type": "string"
                                                    },
                                                    "ExtendedLinks": {
                                                        "type": "string"
                                                    },
                                                    "ExtendedProperties": {
                                                        "type": "string"
                                                    },
                                                    "IsIncident": {
                                                        "type": "boolean"
                                                    },
                                                    "ProcessingEndTime": {
                                                        "type": "string"
                                                    },
                                                    "ProductComponentName": {
                                                        "type": "string"
                                                    },
                                                    "ProductName": {
                                                        "type": "string"
                                                    },
                                                    "ProviderName": {
                                                        "type": "string"
                                                    },
                                                    "RemediationSteps": {
                                                        "type": "string"
                                                    },
                                                    "ResourceId": {
                                                        "type": "string"
                                                    },
                                                    "SourceComputerId": {
                                                        "type": "string"
                                                    },
                                                    "SourceSystem": {
                                                        "type": "string"
                                                    },
                                                    "StartTime": {
                                                        "type": "string"
                                                    },
                                                    "Status": {
                                                        "type": "string"
                                                    },
                                                    "SystemAlertId": {
                                                        "type": "string"
                                                    },
                                                    "Tactics": {
                                                        "type": "string"
                                                    },
                                                    "TenantId": {
                                                        "type": "string"
                                                    },
                                                    "TimeGenerated": {
                                                        "type": "string"
                                                    },
                                                    "Type": {
                                                        "type": "string"
                                                    },
                                                    "VendorName": {
                                                        "type": "string"
                                                    },
                                                    "VendorOriginalId": {
                                                        "type": "string"
                                                    },
                                                    "WorkspaceResourceGroup": {
                                                        "type": "string"
                                                    },
                                                    "WorkspaceSubscriptionId": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "SystemAlertId",
                                                    "TimeGenerated",
                                                    "TenantId",
                                                    "DisplayName",
                                                    "AlertName",
                                                    "AlertSeverity",
                                                    "Description",
                                                    "ProviderName",
                                                    "VendorName",
                                                    "VendorOriginalId",
                                                    "ResourceId",
                                                    "SourceComputerId",
                                                    "AlertType",
                                                    "ConfidenceLevel",
                                                    "ConfidenceScore",
                                                    "IsIncident",
                                                    "StartTime",
                                                    "EndTime",
                                                    "ProcessingEndTime",
                                                    "RemediationSteps",
                                                    "ExtendedProperties",
                                                    "Entities",
                                                    "SourceSystem",
                                                    "WorkspaceSubscriptionId",
                                                    "WorkspaceResourceGroup",
                                                    "ExtendedLinks",
                                                    "ProductName",
                                                    "ProductComponentName",
                                                    "AlertLink",
                                                    "Status",
                                                    "CompromisedEntity",
                                                    "Tactics",
                                                    "Type"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "description": "Parse event to surface attribute that contains Remediation Steps"
                                },
                                "Run_query_and_list_results": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": "SecurityAlert\n| summarize arg_max(TimeGenerated, *) by SystemAlertId\n| where SystemAlertId in(\"@{triggerBody()?['SystemAlertId']}\") ",
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/queryData",
                                        "queries": {
                                            "resourcegroups": "",
                                            "resourcename": "",
                                            "resourcetype": "Log Analytics Workspace",
                                            "subscriptions": "",
                                            "timerange": "@triggerBody()?['TimeGenerated']"
                                        }
                                    },
                                    "description": "Searches for the raw SecurityAlert event in the workspace to surface the Remediation Steps related to the event"
                                }
                            },
                            "runAfter": {
                                "Alert_-_Get_incident": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "or": [
                                    {
                                        "equals": [
                                            "@triggerBody()?['ProductName']",
                                            "Azure Security Center"
                                        ]
                                    },
                                    {
                                        "equals": [
                                            "@triggerBody()?['ProductName']",
                                            "Microsoft Defender Advanced Threat Protection"
                                        ]
                                    }
                                ]
                            },
                            "type": "If",
                            "description": "Determine if Alert comes from ASC (Azure Defender) or Microsoft Defender for Endpoint as these data sources contain recommended remediation steps."
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuremonitorlogs": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureMonitorLogsConnectionName'))]",
                                "connectionName": "[variables('AzureMonitorLogsConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuremonitorlogs')]"
                            },
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                                "connectionName": "[variables('AzureSentinelConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                            }
                        }
                    }
                }
            }
        }
    ]
}

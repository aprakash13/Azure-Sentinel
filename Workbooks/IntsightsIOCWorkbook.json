{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "id": "bd618d6f-8e52-4cd4-87af-0fa8a03dc56d",
            "cellValue": "Tab",
            "linkTarget": "parameter",
            "linkLabel": "IOCs Overview",
            "subTarget": "iocs_overview",
            "style": "link"
          },
          {
            "id": "a482be59-ecc1-4215-b0ff-fd4455197422",
            "cellValue": "Tab",
            "linkTarget": "parameter",
            "linkLabel": "Correlation Overview",
            "subTarget": "correlation_overview",
            "style": "link"
          }
        ]
      },
      "name": "links - 3"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "e61becba-cfb6-42f3-a155-422e4f359817",
                  "version": "KqlParameterItem/1.0",
                  "name": "TimeRange",
                  "label": "Time Range:",
                  "type": 4,
                  "isRequired": true,
                  "value": {
                    "durationMs": 7776000000
                  },
                  "typeSettings": {
                    "selectableValues": [
                      {
                        "durationMs": 86400000
                      },
                      {
                        "durationMs": 604800000
                      },
                      {
                        "durationMs": 1209600000
                      },
                      {
                        "durationMs": 2592000000
                      },
                      {
                        "durationMs": 5184000000
                      },
                      {
                        "durationMs": 7776000000
                      }
                    ],
                    "allowCustom": true
                  },
                  "timeContext": {
                    "durationMs": 86400000
                  }
                }
              ],
              "style": "pills",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "customWidth": "15",
            "name": "parameters - 3"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "3e8bb03d-ba1e-4d9f-b649-e8964090f6b4",
                  "version": "KqlParameterItem/1.0",
                  "name": "reporting_feeds",
                  "label": "Reporting Feeds:",
                  "type": 2,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "ThreatIntelligenceIndicator\n| extend ReportingFeeds=parse_json(Description)['ReportingFeeds']\n| where isnotnull(ReportingFeeds)\n| mv-expand ReportingFeeds\n| summarize by tostring(ReportingFeeds)\n| order by ReportingFeeds asc",
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 0
                  },
                  "timeContextFromParameter": "TimeRange",
                  "defaultValue": "value::all",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "value": [
                    "RH-ISAC",
                    "Threats Library",
                    "US-CERT"
                  ]
                }
              ],
              "style": "pills",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "customWidth": "20",
            "name": "parameters - 1"
          }
        ],
        "exportParameters": true
      },
      "name": "filters"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "ThreatIntelligenceIndicator\n| extend Enrichment=parse_json(Description)\n| extend ReportingFeed = Enrichment['ReportingFeeds'][0]\n| where ReportingFeed in ({reporting_feeds})\n| summarize Count=count(), Title='Total Indicators'",
                    "size": 3,
                    "timeContext": {
                      "durationMs": 7776000000
                    },
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "tiles",
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "Title",
                        "formatter": 1
                      },
                      "subtitleContent": {
                        "columnMatch": "Count",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "none"
                        }
                      },
                      "showBorder": true,
                      "size": "full"
                    }
                  },
                  "customWidth": "33",
                  "name": "total_indicators",
                  "styleSettings": {
                    "padding": "0px"
                  }
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "ThreatIntelligenceIndicator\n| extend Enrichment=parse_json(Description)\n| extend ReportingFeed = Enrichment['ReportingFeeds'][0]\n| where ReportingFeed in ({reporting_feeds})\n| where Enrichment['Severity'] == 'High' or ConfidenceScore == 85\n| summarize Count=count(), Title='Total High Severity'",
                    "size": 3,
                    "color": "red",
                    "timeContext": {
                      "durationMs": 7776000000
                    },
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "tiles",
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "Title",
                        "formatter": 1
                      },
                      "subtitleContent": {
                        "columnMatch": "Count",
                        "formatter": 12,
                        "formatOptions": {
                          "min": -1,
                          "palette": "red"
                        },
                        "tooltipFormat": {
                          "tooltip": "High"
                        }
                      },
                      "showBorder": true,
                      "sortCriteriaField": "Enrichment_Severity",
                      "sortOrderField": 1,
                      "size": "full"
                    },
                    "graphSettings": {
                      "type": 0,
                      "topContent": {
                        "columnMatch": "Enrichment_Severity",
                        "formatter": 1
                      },
                      "centerContent": {
                        "columnMatch": "count_",
                        "formatter": 1,
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "maximumSignificantDigits": 3,
                            "maximumFractionDigits": 2
                          }
                        }
                      }
                    },
                    "mapSettings": {
                      "locInfo": "LatLong",
                      "sizeSettings": "count_",
                      "sizeAggregation": "Sum",
                      "legendMetric": "count_",
                      "legendAggregation": "Sum",
                      "itemColorSettings": {
                        "type": "heatmap",
                        "colorAggregation": "Sum",
                        "nodeColorField": "count_",
                        "heatmapPalette": "greenRed"
                      }
                    }
                  },
                  "customWidth": "20",
                  "name": "total_high_severity"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "ThreatIntelligenceIndicator\n| extend Enrichment=parse_json(Description)\n| extend ReportingFeed = Enrichment['ReportingFeeds'][0]\n| where ReportingFeed in ({reporting_feeds})\n| where Enrichment['Severity'] == 'Medium' or ConfidenceScore == 50\n| summarize Count=count(), Title='Total Medium Severity'",
                    "size": 3,
                    "color": "orange",
                    "timeContext": {
                      "durationMs": 7776000000
                    },
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "tiles",
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "Title",
                        "formatter": 1
                      },
                      "subtitleContent": {
                        "columnMatch": "Count",
                        "formatter": 12,
                        "formatOptions": {
                          "min": -1,
                          "palette": "orange"
                        },
                        "tooltipFormat": {
                          "tooltip": "Medium"
                        }
                      },
                      "showBorder": true,
                      "sortCriteriaField": "Enrichment_Severity",
                      "sortOrderField": 1,
                      "size": "full"
                    },
                    "graphSettings": {
                      "type": 0,
                      "topContent": {
                        "columnMatch": "Enrichment_Severity",
                        "formatter": 1
                      },
                      "centerContent": {
                        "columnMatch": "count_",
                        "formatter": 1,
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "maximumSignificantDigits": 3,
                            "maximumFractionDigits": 2
                          }
                        }
                      }
                    },
                    "mapSettings": {
                      "locInfo": "LatLong",
                      "sizeSettings": "count_",
                      "sizeAggregation": "Sum",
                      "legendMetric": "count_",
                      "legendAggregation": "Sum",
                      "itemColorSettings": {
                        "type": "heatmap",
                        "colorAggregation": "Sum",
                        "nodeColorField": "count_",
                        "heatmapPalette": "greenRed"
                      }
                    }
                  },
                  "customWidth": "20",
                  "name": "total_medium_severity"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "ThreatIntelligenceIndicator\n| extend Enrichment=parse_json(Description)\n| extend ReportingFeed = Enrichment['ReportingFeeds'][0]\n| where ReportingFeed in ({reporting_feeds})\n| where Enrichment['Severity'] == 'Low' or ConfidenceScore == 15\n| summarize Count=count(), Title='Total Low Severity'",
                    "size": 3,
                    "color": "blue",
                    "timeContext": {
                      "durationMs": 7776000000
                    },
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "tiles",
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "Title",
                        "formatter": 1
                      },
                      "subtitleContent": {
                        "columnMatch": "Count",
                        "formatter": 12,
                        "formatOptions": {
                          "min": -1,
                          "palette": "blue"
                        },
                        "tooltipFormat": {
                          "tooltip": "Low"
                        }
                      },
                      "showBorder": true,
                      "sortCriteriaField": "Enrichment_Severity",
                      "sortOrderField": 1,
                      "size": "full"
                    },
                    "graphSettings": {
                      "type": 0,
                      "topContent": {
                        "columnMatch": "Enrichment_Severity",
                        "formatter": 1
                      },
                      "centerContent": {
                        "columnMatch": "count_",
                        "formatter": 1,
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "maximumSignificantDigits": 3,
                            "maximumFractionDigits": 2
                          }
                        }
                      }
                    },
                    "mapSettings": {
                      "locInfo": "LatLong",
                      "sizeSettings": "count_",
                      "sizeAggregation": "Sum",
                      "legendMetric": "count_",
                      "legendAggregation": "Sum",
                      "itemColorSettings": {
                        "type": "heatmap",
                        "colorAggregation": "Sum",
                        "nodeColorField": "count_",
                        "heatmapPalette": "greenRed"
                      }
                    }
                  },
                  "customWidth": "20",
                  "name": "total_low_severity"
                }
              ]
            },
            "name": "Severity"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "ThreatIntelligenceIndicator\n| extend Enrichment=parse_json(Description)\n| extend ReportingFeed = Enrichment['ReportingFeeds'][0]\n| where ReportingFeed in ({reporting_feeds})\n| extend IndicatorType = iif(isnotempty(EmailSourceIpAddress) or isnotempty(NetworkDestinationIP) or isnotempty(NetworkIP) or isnotempty(NetworkSourceIP) or isnotempty(NetworkCidrBlock), \"IP\",\n                        iff(isnotempty(Url), \"URL\",\n                        iff(isnotempty(EmailRecipient) or isnotempty(EmailSenderAddress), \"Email\",\n                        iff(isnotempty(FileHashValue), \"File\",\n                         iff(isnotempty(DomainName) or isnotempty(EmailSourceDomain), \"Domain\",\n                        \"Other\")))))\n| summarize CountOfIndicators=count() by IndicatorType",
              "size": 0,
              "title": "Total Indicators by Type",
              "timeContext": {
                "durationMs": 7776000000
              },
              "timeContextFromParameter": "TimeRange",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "barchart",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "IPs",
                    "formatter": 0,
                    "formatOptions": {
                      "aggregation": "Count"
                    }
                  },
                  {
                    "columnMatch": "Domains",
                    "formatter": 0,
                    "formatOptions": {
                      "aggregation": "Count"
                    }
                  },
                  {
                    "columnMatch": "Hashes",
                    "formatter": 0,
                    "formatOptions": {
                      "aggregation": "Count"
                    }
                  }
                ]
              },
              "tileSettings": {
                "showBorder": false
              },
              "graphSettings": {
                "type": 0
              },
              "chartSettings": {
                "seriesLabelSettings": [
                  {
                    "seriesName": "IP",
                    "color": "blue"
                  },
                  {
                    "seriesName": "Domain",
                    "color": "orange"
                  },
                  {
                    "seriesName": "File",
                    "color": "green"
                  }
                ],
                "ySettings": {
                  "min": 0
                }
              }
            },
            "name": "total_indicator_by_type"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "Tab",
        "comparison": "isEqualTo",
        "value": "iocs_overview"
      },
      "name": "IOCs Overview"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let tiObservables = ThreatIntelligenceIndicator\n| extend Enrichment=parse_json(Description)\n| extend ReportingFeed = Enrichment['ReportingFeeds'][0]\n| where ReportingFeed in ({reporting_feeds})\n| project IndicatorId, ThreatType, Active, Enrichment, observableValue = strcat(NetworkSourceIP, NetworkIP, NetworkDestinationIP, Url, EmailSourceIpAddress, EmailSenderAddress, DomainName), SourceSystem;\nlet alertEntity = SecurityAlert \n| project parse_json(Entities), SystemAlertId\n| mvexpand(Entities)\n| extend entity = iif(isnotempty(Entities.Address), Entities.Address,\n                  iif(isnotempty(Entities.HostName),strcat(Entities.HostName, \".\", Entities.DnsDomain),\n                  iif(isnotempty(Entities.Url), Entities.Url,\n                  iif(Entities.Type == \"account\", strcat(Entities.Name,\"@\",Entities.UPNSuffix),\"\")))) \n| where isnotempty(entity) \n| project entity, SystemAlertId;\nalertEntity\n| join kind= inner tiObservables on $left.entity == $right.observableValue\n| summarize Alerts = dcount(SystemAlertId) by Value = observableValue, ThreatType, tostring(Enrichment), Source = SourceSystem\n| summarize Count=count(), Title='Total Matched Indicators'",
                    "size": 3,
                    "timeContext": {
                      "durationMs": 0
                    },
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "tiles",
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "Title",
                        "formatter": 1
                      },
                      "subtitleContent": {
                        "columnMatch": "Count",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "none"
                        }
                      },
                      "showBorder": true,
                      "size": "full"
                    }
                  },
                  "customWidth": "33",
                  "name": "total_matched"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let tiObservables = ThreatIntelligenceIndicator\n| extend Enrichment=parse_json(Description)\n| extend ReportingFeed = Enrichment['ReportingFeeds'][0]\n| where ReportingFeed in ({reporting_feeds})| extend IndicatorType = iif(isnotempty(EmailSourceIpAddress) or isnotempty(NetworkDestinationIP) or isnotempty(NetworkIP) or isnotempty(NetworkSourceIP) or isnotempty(NetworkCidrBlock), \"IP\",\n                        iff(isnotempty(Url), \"URL\",\n                        iff(isnotempty(EmailRecipient) or isnotempty(EmailSenderAddress), \"Email\",\n                        iff(isnotempty(FileHashValue), \"File\",\n                         iff(isnotempty(DomainName) or isnotempty(EmailSourceDomain), \"Domain\",\n                        \"Other\")))))\n| project IndicatorId, ThreatType, Enrichment, Active, observableValue = strcat(NetworkSourceIP, NetworkIP, NetworkDestinationIP, Url, EmailSourceIpAddress, EmailSenderAddress, DomainName), IndicatorType, SourceSystem;\nlet alertEntity = SecurityAlert \n| project parse_json(Entities), SystemAlertId\n| mvexpand(Entities)\n| extend entity = iif(isnotempty(Entities.Address), Entities.Address,\n                  iif(isnotempty(Entities.HostName),strcat(Entities.HostName, \".\", Entities.DnsDomain),\n                  iif(isnotempty(Entities.Url), Entities.Url,\n                  iif(Entities.Type == \"account\", strcat(Entities.Name,\"@\",Entities.UPNSuffix),\"\")))) \n| where isnotempty(entity) \n| project entity, SystemAlertId;\nalertEntity\n| join kind= inner tiObservables on $left.entity == $right.observableValue\n| summarize Alerts = dcount(SystemAlertId) by Value = observableValue, ThreatType, tostring(Enrichment), IndicatorType, Source = SourceSystem\n| summarize CountOfIndicators=count() by IndicatorType",
                    "size": 3,
                    "title": "Total Matched Indicators by Type",
                    "timeContext": {
                      "durationMs": 0
                    },
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "piechart",
                    "chartSettings": {
                      "showMetrics": false,
                      "showLegend": true
                    }
                  },
                  "customWidth": "33",
                  "showPin": false,
                  "name": "total_matched_by_type"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let tiObservables = ThreatIntelligenceIndicator\n| extend Enrichment=parse_json(Description)\n| extend ReportingFeed = Enrichment['ReportingFeeds'][0]\n| where ReportingFeed in ({reporting_feeds})\n| extend Severity=iif(Enrichment['Severity'] == 'High' or ConfidenceScore == 85, \"High\",\n                        iff(Enrichment['Severity'] == 'Medium' or ConfidenceScore == 50, \"Medium\",\n                        iff(Enrichment['Severity'] == 'Low' or ConfidenceScore == 15, \"Low\",\n                        'Other')))\n| project IndicatorId, ThreatType, Enrichment, Active, observableValue = strcat(NetworkSourceIP, NetworkIP, NetworkDestinationIP, Url, EmailSourceIpAddress, EmailSenderAddress, DomainName), Severity, SourceSystem;\nlet alertEntity = SecurityAlert \n| project parse_json(Entities), SystemAlertId\n| mvexpand(Entities)\n| extend entity = iif(isnotempty(Entities.Address), Entities.Address,\n                  iif(isnotempty(Entities.HostName),strcat(Entities.HostName, \".\", Entities.DnsDomain),\n                  iif(isnotempty(Entities.Url), Entities.Url,\n                  iif(Entities.Type == \"account\", strcat(Entities.Name,\"@\",Entities.UPNSuffix),\"\")))) \n| where isnotempty(entity) \n| project entity, SystemAlertId;\nalertEntity\n| join kind= inner tiObservables on $left.entity == $right.observableValue\n| summarize Alerts = dcount(SystemAlertId) by Value = observableValue, ThreatType, tostring(Enrichment), Severity, Source = SourceSystem\n| summarize Count=count() by Severity",
                    "size": 3,
                    "title": "Total Matched Indicators by Severity",
                    "timeContext": {
                      "durationMs": 0
                    },
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "visualization": "piechart",
                    "chartSettings": {
                      "showMetrics": false,
                      "showLegend": true,
                      "seriesLabelSettings": [
                        {
                          "seriesName": "High",
                          "color": "red"
                        },
                        {
                          "seriesName": "Low",
                          "color": "blue"
                        },
                        {
                          "seriesName": "Medium",
                          "color": "orange"
                        },
                        {
                          "seriesName": "Other",
                          "color": "gray"
                        }
                      ]
                    }
                  },
                  "customWidth": "33",
                  "name": "total_matched_by_severity"
                }
              ]
            },
            "name": "group - 0"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let tiObservables = ThreatIntelligenceIndicator\n| extend Enrichment=parse_json(Description)\n| extend ReportingFeed = Enrichment['ReportingFeeds'][0]\n| where ReportingFeed in ({reporting_feeds})\n| extend Tags=set_union(Enrichment['UserTags'],Enrichment['SystemTags'])\n| mvexpand Tags\n| where isnotnull(Tags)\n| project IndicatorId, ThreatType, Active, observableValue = strcat(NetworkSourceIP, NetworkIP, NetworkDestinationIP, Url, EmailSourceIpAddress, EmailSenderAddress, DomainName), Tags, SourceSystem;\nlet alertEntity = SecurityAlert \n| project parse_json(Entities), SystemAlertId\n| mvexpand(Entities)\n| extend entity = iif(isnotempty(Entities.Address), Entities.Address,\n                  iif(isnotempty(Entities.HostName),strcat(Entities.HostName, \".\", Entities.DnsDomain),\n                  iif(isnotempty(Entities.Url), Entities.Url,\n                  iif(Entities.Type == \"account\", strcat(Entities.Name,\"@\",Entities.UPNSuffix),\"\")))) \n| where isnotempty(entity) \n| project entity, SystemAlertId;\nalertEntity\n| join kind= inner tiObservables on $left.entity == $right.observableValue\n| summarize Alerts = dcount(SystemAlertId) by Value = observableValue, ThreatType, tostring(Tags), Source = SourceSystem\n| summarize Count=count() by Tag=tostring(Tags)\n| order by Count desc",
                    "size": 1,
                    "title": "Top Tags Linked with Matched Indicators",
                    "timeContext": {
                      "durationMs": 0
                    },
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "customWidth": "33",
                  "name": "tags"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let tiObservables = ThreatIntelligenceIndicator\n| extend Enrichment = parse_json(Description)\n| extend ReportingFeed = Enrichment['ReportingFeeds'][0]\n| where ReportingFeed in ({reporting_feeds})\n| extend Malwares= Enrichment['Malwares']\n| where isnotnull(Malwares)\n| mvexpand Malwares\n| project IndicatorId, ThreatType, Active, observableValue = strcat(NetworkSourceIP, NetworkIP, NetworkDestinationIP, Url, EmailSourceIpAddress, EmailSenderAddress, DomainName), Malwares, SourceSystem;\nlet alertEntity = SecurityAlert \n| project parse_json(Entities), SystemAlertId\n| mvexpand(Entities)\n| extend entity = iif(isnotempty(Entities.Address), Entities.Address,\n                  iif(isnotempty(Entities.HostName),strcat(Entities.HostName, \".\", Entities.DnsDomain),\n                  iif(isnotempty(Entities.Url), Entities.Url,\n                  iif(Entities.Type == \"account\", strcat(Entities.Name,\"@\",Entities.UPNSuffix),\"\")))) \n| where isnotempty(entity) \n| project entity, SystemAlertId;\nalertEntity\n| join kind= inner tiObservables on $left.entity == $right.observableValue\n| summarize Alerts = dcount(SystemAlertId) by Value = observableValue, ThreatType, tostring(Malwares), Source = SourceSystem\n| summarize Count=count() by Malware=tostring(Malwares)\n| order by Count desc",
                    "size": 1,
                    "title": "Top Malwares Linked with Matched Indicators",
                    "timeContext": {
                      "durationMs": 0
                    },
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "customWidth": "33",
                  "name": "malwares"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let tiObservables = ThreatIntelligenceIndicator\n| extend Enrichment = parse_json(Description)\n| extend ReportingFeed = Enrichment['ReportingFeeds'][0]\n| extend ThreatActors=Enrichment['ThreatActors']\n| where isnotnull(ThreatActors)\n| mvexpand ThreatActors\n| project IndicatorId, ThreatType, Active, observableValue = strcat(NetworkSourceIP, NetworkIP, NetworkDestinationIP, Url, EmailSourceIpAddress, EmailSenderAddress, DomainName), ThreatActors, SourceSystem;\nlet alertEntity = SecurityAlert \n| project parse_json(Entities), SystemAlertId\n| mvexpand(Entities)\n| extend entity = iif(isnotempty(Entities.Address), Entities.Address,\n                  iif(isnotempty(Entities.HostName),strcat(Entities.HostName, \".\", Entities.DnsDomain),\n                  iif(isnotempty(Entities.Url), Entities.Url,\n                  iif(Entities.Type == \"account\", strcat(Entities.Name,\"@\",Entities.UPNSuffix),\"\")))) \n| where isnotempty(entity) \n| project entity, SystemAlertId;\nalertEntity\n| join kind= inner tiObservables on $left.entity == $right.observableValue\n| summarize Alerts = dcount(SystemAlertId) by Value = observableValue, ThreatType, tostring(ThreatActors), Source = SourceSystem\n| summarize Count=count() by ThreatActor=tostring(ThreatActors)\n| order by Count desc",
                    "size": 1,
                    "title": "Top Threat Actors Linked with Matched Indicators",
                    "timeContext": {
                      "durationMs": 0
                    },
                    "timeContextFromParameter": "TimeRange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "customWidth": "33",
                  "name": "threat_actors"
                }
              ]
            },
            "name": "group - 1"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "Tab",
        "comparison": "isEqualTo",
        "value": "correlation_overview"
      },
      "name": "Correlation Overview"
    }
  ],
  "fallbackResourceIds": [
    "/subscriptions/df5ebcb7-3cc5-4549-b82d-2ee2a62cf4de/resourcegroups/resource_group_for_sentinel_clint/providers/microsoft.operationalinsights/workspaces/azure-sentinel-clint"
  ],
  "fromTemplateId": "sentinel-IntsightsIOCWorkbook",
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}
id: 745a22ec-fed8-49b9-9f62-4570b7709da4
name: Azure Active Directory sign-in burst from multiple locations
description: |
  'Highlights accounts associated with multiple authentications from different geographical locations in a short period of time.'
requiredDataConnectors:
  - connectorId: AzureActiveDirectory
    dataTypes:
      - SigninLogs
tactics:
  - CredentialAccess
relevantTechniques:
  - T1110
query: |

  let timeRange = ago(10d);
  let signIns = SigninLogs
  | where TimeGenerated >= timeRange
  | extend locationString= strcat(tostring(LocationDetails["countryOrRegion"]), "/",
   tostring(LocationDetails["state"]), "/", tostring(LocationDetails["city"]))
  | where locationString != "//" 
  // filter out signins associated with top 100 signin locations 
  | join kind=anti (
  SigninLogs
    | where TimeGenerated >= timeRange
    | extend locationString= strcat(tostring(LocationDetails["countryOrRegion"]), "/", 
    tostring(LocationDetails["state"]), "/", tostring(LocationDetails["city"]))
    | where locationString != "//"
    | summarize count() by locationString
    | order by count_ desc
    | take 100) on locationString ; // TODO - make this threshold percentage-based
  // We will perform a time window join to identify signins from multiple locations within a 10-minute period
  let lookupWindow = 10m;
  let lookupBin = lookupWindow / 2.0; // lookup bin = equal to 1/2 of the lookup window
  signIns 
  | project-rename Start=TimeGenerated 
  | extend TimeKey = bin(Start, lookupBin)
  | join kind = inner (
  signIns 
  | project-rename End=TimeGenerated, EndLocationString=locationString 
    // TimeKey on the right side of the join - emulates this authentication appearing several times
    | extend TimeKey = range(bin(End - lookupWindow, lookupBin),
    bin(End, lookupBin), lookupBin)
    | mvexpand TimeKey to typeof(datetime) // translate TimeKey arrange range to a column
  ) on Identity, TimeKey
  | where End > Start
  | project timeSpan = End - Start, Identity, locationString, EndLocationString,tostring(Start), tostring(End), UserPrincipalName
  | where locationString != EndLocationString
  | summarize by timeSpan, Identity, locationString, EndLocationString, Start, End, UserPrincipalName
  | extend timestamp = Start, AccountCustomEntity = UserPrincipalName 
  | order by Identity

entityMappings:
  - entityType: Account
    fieldMappings:
      - identifier: FullName
        columnName: AccountCustomEntity
id: 3dc5dc8b-160b-407e-9925-24a91e3599df
name: Firewall rule changes using netsh
description: |
  This query will show firewall rule changes using netsh utility.
  This technique was seen in relation to Solarigate attack but the results can indicate potential  malicious activity used in different attacks.
  The process name in each data source is commented out as an adversary could rename it. It is advisable to keep process name commented but 
  if the results show unrelated false positives, users may want to uncomment it.
  Refer to netsh syntax: https://docs.microsoft.com/windows-server/administration/windows-commands/netsh
  Refer to our M365 blog for details on use during the Solorigate attack:
  https://www.microsoft.com/security/blog/2021/01/20/deep-dive-into-the-solorigate-second-stage-activation-from-sunburst-to-teardrop-and-raindrop/
severity: Low
requiredDataConnectors:
  - connectorId: SecurityEvents
    dataTypes:
      - SecurityEvent
tactics:
  - Execution
relevantTechniques:
  - T1204
tags:
  - Solorigate
query: |
  let timeframe = 1d;
  let AccountAllowList = dynamic(['SYSTEM']);
  let tokens = dynamic(["add", "delete", "set"]); 
  (union isfuzzy=true
  (
  SecurityEvent
  | where TimeGenerated >= ago(timeframe)
  // | where Process =~ "netsh.exe" 
  | where CommandLine has_all ("advfirewall", "firewall") and CommandLine has_any (tokens)
  | where AccountType !~ "Machine" and Account !in~ (AccountAllowList)
  | extend KeyValuePairs = extract_all(@"(?P<key>\w+)=(?P<value>\S+)", dynamic(["key","value"]), CommandLine)
  | mv-apply KeyValuePairs on (
      summarize CommandLineParsed = make_bag(pack(tostring(KeyValuePairs[0]), KeyValuePairs[1]))
  )
  | extend RuleName = tostring(parse_json(CommandLineParsed).Name)
  | summarize count() , StartTime= min(TimeGenerated), EndTime=max(TimeGenerated) by Computer, Account, SubjectDomainName, SubjectUserName, RuleName, CommandLine, Process, ParentProcessName, tostring(CommandLineParsed)
  | extend timestamp = StartTime, AccountCustomEntity = Account, HostCustomEntity = Computer
  ),
  (
  DeviceProcessEvents
  | where TimeGenerated >= ago(timeframe)
  // | where InitiatingProcessFileName =~ "netsh.exe" 
  | where InitiatingProcessCommandLine has_all ("advfirewall", "firewall") and InitiatingProcessCommandLine has_any (tokens)
  | where AccountName !in~ (AccountAllowList)
  | extend KeyValuePairs = extract_all(@"(?P<key>\w+)=(?P<value>\S+)", dynamic(["key","value"]), InitiatingProcessCommandLine)
  | mv-apply KeyValuePairs on (
      summarize CommandLineParsed = make_bag(pack(tostring(KeyValuePairs[0]), KeyValuePairs[1]))
  )
  | summarize count() , StartTime= min(TimeGenerated), EndTime=max(TimeGenerated) by DeviceName, AccountName, InitiatingProcessAccountDomain, InitiatingProcessAccountName, InitiatingProcessCommandLine, InitiatingProcessFileName, InitiatingProcessParentFileName, tostring(CommandLineParsed)
  | extend timestamp = StartTime, AccountCustomEntity = InitiatingProcessAccountName, HostCustomEntity = DeviceName
  ),
  (
  Event
  | where TimeGenerated > ago(timeframe)
  | where Source == "Microsoft-Windows-Sysmon"
  | where EventID == 1
  | extend EventData = parse_xml(EventData).DataItem.EventData.Data
  | mv-expand bagexpansion=array EventData
  | evaluate bag_unpack(EventData)
  | extend Key=tostring(['@Name']), Value=['#text']
  | evaluate pivot(Key, any(Value), TimeGenerated, Source, EventLog, Computer, EventLevel, EventLevelName, EventID, UserName, RenderedDescription, MG, ManagementGroupName, Type, _ResourceId)
  | where OriginalFileName =~ "netsh.exe"
  | where CommandLine has_all ("advfirewall", "firewall") and CommandLine has_any (tokens)
  | where User !in~ (AccountAllowList)
  | extend KeyValuePairs = extract_all(@"(?P<key>\w+)=(?P<value>\S+)", dynamic(["key","value"]), CommandLine)
  | mv-apply KeyValuePairs on (
    summarize CommandLineParsed = make_bag(pack(tostring(KeyValuePairs[0]), KeyValuePairs[1]))
    )
  | summarize count() , StartTime= min(TimeGenerated), EndTime=max(TimeGenerated) by Computer, User, Process, ParentImage, CommandLine, tostring(CommandLineParsed)
  | extend timestamp = StartTime, AccountCustomEntity = User, HostCustomEntity = Computer
  )
  )